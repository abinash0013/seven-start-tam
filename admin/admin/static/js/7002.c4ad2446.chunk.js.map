{"version":3,"file":"static/js/7002.c4ad2446.chunk.js","mappings":"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","sources":["constants/Data.constant.js","services/AppSetting.js","services/Ops.js","views/agents/Agents.js"],"sourcesContent":["// const mainUrl = `http://localhost:8000/`\r\nconst mainUrl = `http://178.16.137.208:8000/`\r\n// const mainUrl = `https://api.sevenstartambola.com/`\r\n// const mainUrl = `http://api.sevenstartambola.com/`\r\nconst base = {\r\n  adminLogin: mainUrl + `adminLogin`,\r\n  saveAgent: mainUrl + `saveAgent`,\r\n  agentsList: mainUrl + `agentsList`,\r\n  editAgent: mainUrl + `editAgent`,\r\n  deleteAgent: mainUrl + `deleteAgent`,\r\n  saveUser: mainUrl + `saveUser`,\r\n  usersList: mainUrl + `usersList`,\r\n  editUser: mainUrl + `editUser`,\r\n  deleteUser: mainUrl + `deleteUser`,\r\n  // saveTicket: mainUrl + `saveTicket`,\r\n  // ticketList: mainUrl + `ticketList`,\r\n  // editTicket: mainUrl + `editTicket`,\r\n  // deleteTicket: mainUrl + `deleteTicket`,\r\n  ticketCardView: mainUrl + `ticketCardView`,\r\n  gameList: mainUrl + `gameList`,\r\n  saveGame: mainUrl + `saveGame`,\r\n  editGame: mainUrl + `editGame`,\r\n  saveAnnouncement: mainUrl + `saveAnnouncement`,\r\n  announcementList: mainUrl + `announcementList`,\r\n  editAnnouncement: mainUrl + `editAnnouncement`,\r\n  deleteAnnouncement: mainUrl + `deleteAnnouncement`,\r\n  disclaimerList: mainUrl + `disclaimerList`,\r\n  editDisclaimer: mainUrl + `editDisclaimer`,\r\n  agentDetails: mainUrl + 'agentDetails',\r\n  agentPaidAmount: mainUrl + 'agentPaidAmount',\r\n  agentTransacationList: mainUrl + 'agentTransacationList',\r\n  walletAction: mainUrl + 'walletAction',\r\n  startGame: mainUrl + 'matchedTicketForBooking',\r\n}\r\nexport { base }\r\n","import { base } from \"src/constants/Data.constant\";\r\nimport * as opsService from \"./Ops\";\r\n\r\nconst postApiCall = async (url, request) => {\r\n    let token = localStorage.getItem(\"token\");\r\n    try {\r\n        let result = await opsService.postData(\r\n            url,\r\n            request,\r\n            token\r\n        );\r\n        // console.log(\"resultPostdata\", result);\r\n        return result;\r\n    } catch (e) {\r\n        return { status: false, data: {}, message: e.message };\r\n    }\r\n}, putApiCall = async (url, request) => {\r\n    let token = localStorage.getItem(\"token\");\r\n\r\n    try {\r\n        let result = await opsService.putData(\r\n            url,\r\n            request,\r\n            token\r\n        );\r\n        // console.log(\"resultPostdata\", result);\r\n        return result;\r\n    } catch (e) {\r\n        return { status: false, data: {}, message: e.message };\r\n    }\r\n}, getApiCall = async (url) => {\r\n    try {\r\n        let result = await opsService.getData(\r\n            url,\r\n            false\r\n        );\r\n        return result;\r\n    } catch (e) {\r\n        return { status: false, data: {}, message: e.message };\r\n    }\r\n};\r\nexport { postApiCall, getApiCall, putApiCall };\r\n","import axios from \"axios\";\r\n\r\nconst postData = async (url = \"\", data, token = false) => {\r\n    // console.log(\"url\",url)\r\n    let tokenData = \"\";\r\n    if (token) {\r\n        tokenData = \"Bearer \" + token;\r\n    }\r\n    var header = { headers: { Authorization: tokenData } };\r\n    let response = await axios.post(url, data, header);\r\n    // let response = await axios.post(url, data, { headers:  { \"Authorization\": tokenData }});\r\n    return response.data;\r\n};\r\nconst postDataContent = async (url = \"\", data, token = false, contentType) => {\r\n    let tokenData = \"\";\r\n    if (token) {\r\n        tokenData = \"Bearer \" + token;\r\n    }\r\n    // console.log('contentType', contentType)\r\n    let response = await axios.post(url, data, {\r\n        headers: { Authorization: tokenData, \"content-type\": contentType },\r\n    });\r\n    return response.data;\r\n};\r\nconst putData = async (url = \"\", data, token = false) => {\r\n    if (token) {\r\n        token = \"Bearer \" + token;\r\n    }\r\n    let response = await axios.put(url, data, {\r\n        headers: { Authorization: token },\r\n    });\r\n    return response.data;\r\n};\r\nconst getData = async (url = \"\", token = false) => {\r\n    if (token) {\r\n        token = \"Bearer \" + token;\r\n    }\r\n    var header = { headers: { Authorization: token } };\r\n    let response = await axios.get(url, header);\r\n    return response.data;\r\n};\r\nconst deleteData = async (url = \"\", token = false) => {\r\n    if (token) {\r\n        token = \"Bearer \" + token;\r\n    }\r\n    let response = await axios.delete(url, {\r\n        headers: { Authorization: token },\r\n    });\r\n    return response.data;\r\n};\r\nexport async function downloadFile(fileUrl, data, token = false) {\r\n    if (token) {\r\n        token = \"Bearer \" + token;\r\n    }\r\n    axios\r\n        .post(fileUrl, data, {\r\n            responseType: \"blob\",\r\n            headers: { Authorization: token },\r\n        })\r\n        .then(function (response) {\r\n            const type = response.headers[\"content-type\"];\r\n            const blob = new Blob([response.data], {\r\n                type: type,\r\n                encoding: \"UTF-8\",\r\n            });\r\n            const link = document.createElement(\"a\");\r\n            link.href = window.URL.createObjectURL(blob);\r\n            link.download = data.fileName;\r\n            link.click();\r\n        });\r\n}\r\n\r\nexport { postData, getData, deleteData, putData, postDataContent };\r\n","import React, { useEffect, useState } from 'react'\r\nimport {\r\n  CButton,\r\n  CCard,\r\n  CCardBody,\r\n  CCardHeader,\r\n  CCol,\r\n  CForm,\r\n  CFormInput,\r\n  CFormLabel,\r\n  CFormSelect,\r\n  CFormTextarea,\r\n  CModal,\r\n  CModalBody,\r\n  CModalFooter,\r\n  CModalHeader,\r\n  CModalTitle,\r\n  CRow,\r\n  CTable,\r\n  CTableBody,\r\n  CTableCaption,\r\n  CTableDataCell,\r\n  CTableHead,\r\n  CTableHeaderCell,\r\n  CTableRow,\r\n} from '@coreui/react'\r\nimport { getApiCall, postApiCall, putApiCall } from 'src/services/AppSetting'\r\nimport { base } from 'src/constants/Data.constant'\r\nimport { ToastContainer, toast } from 'react-toastify'\r\nimport 'react-toastify/dist/ReactToastify.css'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst Agents = () => {\r\n  const [deleteModalVisible, setDeleteModalVisible] = useState(false)\r\n  const [itemValue, setItemValue] = useState('')\r\n  const [editModalVisible, setEditModalVisible] = useState(false)\r\n  const [agentsData, setAgentsData] = useState([])\r\n  const [visible, setVisible] = useState(false)\r\n  const [id, setId] = useState('')\r\n  const [name, setName] = useState('')\r\n  const [email, setEmail] = useState('')\r\n  const [phone, setPhone] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const [gender, setGender] = useState('')\r\n  const [status, setStatus] = useState('')\r\n  const [statusRemarks, setStatusRemarks] = useState('')\r\n  const [search, setSearch] = useState('')\r\n\r\n  useEffect(() => {\r\n    agents_list()\r\n  }, [])\r\n\r\n  const clearFormData = async () => {\r\n    setName('')\r\n    setEmail('')\r\n    setPhone('')\r\n    setPassword('')\r\n    setGender('')\r\n    setStatus('')\r\n  }\r\n  const agents_list = async () => {\r\n    let result = await getApiCall(base.agentsList)\r\n    setAgentsData(result)\r\n  }\r\n\r\n  const save_agent = async () => {\r\n    if (name == '') {\r\n      toast.error('name is mandatory')\r\n    } else if (email == '') {\r\n      toast.error('emmail is mandatory')\r\n    } else if (phone == '') {\r\n      toast.error('phone no. is mandatory')\r\n    } else if (phone.length < 10) {\r\n      toast.error('Phone No. Should be in 10 digits')\r\n    } else if (gender == '') {\r\n      toast.error('Please select a gender')\r\n    } else if (status == '') {\r\n      toast.error('Please select a status')\r\n    } else {\r\n      let req = {\r\n        name: name.target.value,\r\n        email: email.target.value,\r\n        phone: phone.target.value,\r\n        password: password,\r\n        gender: gender,\r\n        status: status,\r\n      }\r\n      // console.log(\"saveAgentApiCallreq\", req);\r\n      let result = await postApiCall(base.saveAgent, req)\r\n      if (result.code == 200) {\r\n        setVisible(false)\r\n        agents_list()\r\n        clearFormData()\r\n        toast.success('Successfully Created..!')\r\n      }\r\n    }\r\n  }\r\n\r\n  const delete_agent = async (value) => {\r\n    let req = {\r\n      id: value.agents_id,\r\n      status: '1',\r\n    }\r\n    // console.log(\"iddddAgentreq\", req);\r\n    let result = await putApiCall(base.deleteAgent, req)\r\n    // console.log(\"iddddAgentresult\", result);\r\n    if (result.code == 200) {\r\n      agents_list()\r\n      toast.error('Deleted Successfully..!')\r\n    }\r\n  }\r\n\r\n  const get_edit_value = async (item) => {\r\n    setEditModalVisible(true)\r\n    setId(item.agents_id)\r\n    setName(item.agents_name)\r\n    setEmail(item.agents_email)\r\n    setPhone(item.agents_phone)\r\n    setGender(item.agents_gender)\r\n    setStatus(item.agents_active_status)\r\n    setStatusRemarks(item.agents_status_remarks)\r\n  }\r\n\r\n  const edit_agent = async () => {\r\n    if (name == 0) {\r\n      alert('Name Field is Mandatory.!!')\r\n    } else if (email == 0) {\r\n      alert('Email is Mandatory..!')\r\n    } else if (phone == 0) {\r\n      alert('Phone is Mandatory..!')\r\n    } else if (gender == 0) {\r\n      alert('Gender is Mandatory..!')\r\n    } else if (status == 0) {\r\n      alert('Status is Mandatory..!')\r\n    } else {\r\n      let req = {\r\n        id: id,\r\n        name: name,\r\n        email: email,\r\n        phone: phone,\r\n        gender: gender,\r\n        status: status,\r\n        statusRemarks: statusRemarks,\r\n      }\r\n      // console.log(\"reqreq\", req);\r\n      let result = await putApiCall(base.editAgent, req)\r\n      console.log('resultresult', result)\r\n      if (result.code == 200) {\r\n        setEditModalVisible(false)\r\n        agents_list()\r\n        toast.success('Updated Successfully..!')\r\n      }\r\n    }\r\n  }\r\n\r\n  const randomPasswordGenerate = () => {\r\n    const charset = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789'\r\n    let newPassword = ''\r\n    for (let i = 0; i < 8; i++) {\r\n      const randomIndex = Math.floor(Math.random() * charset.length)\r\n      newPassword += charset[randomIndex]\r\n    }\r\n    setPassword(newPassword)\r\n    toast.error(newPassword)\r\n    console.log('newPassworddd', newPassword)\r\n  }\r\n\r\n  // const _filter = (item, index) => {\r\n  //   console.log(\"itemfilter\", item);\r\n  //   if (item.agents_name.toString().toUpperCase().search(search.toString().toUpperCase()) !== -1 ||\r\n  //     item.agents_email.toString().toUpperCase().search(search.toString().toUpperCase()) !== -1 ||\r\n  //     item.agents_phone.toString().toUpperCase().search(search.toString().toUpperCase()) !== -1 ||\r\n  //     item.agents_gender.toString().toUpperCase().search(search.toString().toUpperCase()) !== -1 ||\r\n  //     item.agents_address.toString().toUpperCase().search(search.toString().toUpperCase()) !== -1\r\n  //   ) {\r\n  //     return item;\r\n  //   }\r\n  // }\r\n\r\n  return (\r\n    <CRow>\r\n      <CCol xs={12} className=\"mb-4\">\r\n        {/* <div className='d-flex justify-content-between'> */}\r\n        <CButton\r\n          color=\"primary\"\r\n          onClick={() => {\r\n            setVisible(true)\r\n          }}\r\n          onClose={() => setVisible(false)}\r\n        >\r\n          Add\r\n        </CButton>\r\n        {/* <div class=\"w-25\">\r\n            <CFormInput\r\n              type=\"text\"\r\n              id=\"search\"\r\n              placeholder=\"Search\"\r\n              onChange={(e) => { setSearch(e) }}\r\n            />\r\n          </div>\r\n        </div> */}\r\n        <ToastContainer />\r\n        <CModal alignment=\"center\" visible={visible} onClose={() => setVisible(false)}>\r\n          <CModalHeader>\r\n            <CModalTitle>Add</CModalTitle>\r\n          </CModalHeader>\r\n          <CModalBody>\r\n            <CForm>\r\n              <div className=\"mb-3\">\r\n                <CFormLabel htmlFor=\"name\">Name</CFormLabel>\r\n                <CFormInput\r\n                  type=\"text\"\r\n                  id=\"name\"\r\n                  placeholder=\"Agent Name\"\r\n                  onChange={(e) => {\r\n                    setName(e)\r\n                  }}\r\n                />\r\n                <CFormLabel htmlFor=\"email\">Email address</CFormLabel>\r\n                <CFormInput\r\n                  type=\"email\"\r\n                  id=\"email\"\r\n                  placeholder=\"agent@example.com\"\r\n                  onChange={(e) => {\r\n                    setEmail(e)\r\n                  }}\r\n                />\r\n                <CFormLabel htmlFor=\"phone\">Phone</CFormLabel>\r\n                <CFormInput\r\n                  type=\"text\"\r\n                  id=\"phone\"\r\n                  placeholder=\"Agent Phone\"\r\n                  onChange={(e) => {\r\n                    setPhone(e)\r\n                  }}\r\n                  maxLength={10}\r\n                />\r\n                <CFormLabel htmlFor=\"password\">Password</CFormLabel>\r\n                <div className=\"d-flex\">\r\n                  <CFormInput\r\n                    type=\"text\"\r\n                    id=\"password\"\r\n                    placeholder=\"Agent Password\"\r\n                    // onChange={(e) => { setPassword(e) }}\r\n                    defaultValue={password}\r\n                    disabled\r\n                  />\r\n                  <CButton\r\n                    className=\"mx-1\"\r\n                    color=\"secondary\"\r\n                    onClick={() => randomPasswordGenerate()}\r\n                  >\r\n                    Generate\r\n                  </CButton>\r\n                </div>\r\n                <CFormLabel htmlFor=\"gender\">Gender</CFormLabel>\r\n                <CFormSelect\r\n                  defaultValue={gender}\r\n                  id=\"gender\"\r\n                  onChange={(e) => {\r\n                    setGender(e.target.value)\r\n                  }}\r\n                >\r\n                  <option value=\"\" selected disabled>\r\n                    Select Gender\r\n                  </option>\r\n                  <option value=\"Male\">Male</option>\r\n                  <option value=\"Female\">Female</option>\r\n                  <option value=\"Others\">Others</option>\r\n                </CFormSelect>\r\n                <CFormLabel htmlFor=\"status\">Status</CFormLabel>\r\n                <CFormSelect\r\n                  defaultValue={status}\r\n                  id=\"status\"\r\n                  onChange={(e) => {\r\n                    setStatus(e.target.value)\r\n                  }}\r\n                >\r\n                  <option value=\"\" selected disabled>\r\n                    Select Status\r\n                  </option>\r\n                  <option value=\"Active\">Active</option>\r\n                  <option value=\"Deactive\">Deactive</option>\r\n                </CFormSelect>\r\n              </div>\r\n            </CForm>\r\n          </CModalBody>\r\n          <CModalFooter>\r\n            <CButton color=\"secondary\" onClick={() => setEditModalVisible(false)}>\r\n              Cancel\r\n            </CButton>\r\n            <CButton color=\"primary\" onClick={() => save_agent()}>\r\n              Save\r\n            </CButton>\r\n          </CModalFooter>\r\n        </CModal>\r\n      </CCol>\r\n      <CCol xs={12}>\r\n        <CCard className=\"mb-4\">\r\n          <CCardBody>\r\n            <CTable hover responsive>\r\n              <CTableHead>\r\n                <CTableRow>\r\n                  <CTableHeaderCell scope=\"col\">#</CTableHeaderCell>\r\n                  <CTableHeaderCell scope=\"col\">Name</CTableHeaderCell>\r\n                  <CTableHeaderCell scope=\"col\">Email</CTableHeaderCell>\r\n                  <CTableHeaderCell scope=\"col\">Phone</CTableHeaderCell>\r\n                  <CTableHeaderCell scope=\"col\">Gender</CTableHeaderCell>\r\n                  <CTableHeaderCell scope=\"col\">Status</CTableHeaderCell>\r\n                  <CTableHeaderCell scope=\"col\">Status Remarks</CTableHeaderCell>\r\n                  <CTableHeaderCell scope=\"col\">Action</CTableHeaderCell>\r\n                </CTableRow>\r\n              </CTableHead>\r\n              <CTableBody>\r\n                {agentsData.map((item, index) => {\r\n                  console.log('agentlistitem', item)\r\n                  // if (_filter(item, search)) {\r\n                  return (\r\n                    <CTableRow key={index}>\r\n                      <CTableHeaderCell scope=\"row\">{index + 1}</CTableHeaderCell>\r\n                      <CTableDataCell>{item.agents_name}</CTableDataCell>\r\n                      <CTableDataCell>{item.agents_email}</CTableDataCell>\r\n                      <CTableDataCell>{item.agents_phone}</CTableDataCell>\r\n                      <CTableDataCell>{item.agents_gender}</CTableDataCell>\r\n                      <CTableDataCell>{item.agents_active_status}</CTableDataCell>\r\n                      <CTableDataCell>{item.agents_status_remarks}</CTableDataCell>\r\n                      <CTableDataCell>\r\n                        <CButton\r\n                          color=\"warning\"\r\n                          className=\"me-2\"\r\n                          onClick={() => {\r\n                            get_edit_value(item)\r\n                          }}\r\n                        >\r\n                          Edit\r\n                        </CButton>\r\n                        <CModal alignment=\"center\" visible={editModalVisible}>\r\n                          <CModalHeader>\r\n                            <CModalTitle>Edit</CModalTitle>\r\n                          </CModalHeader>\r\n                          <CModalBody>\r\n                            <CForm>\r\n                              <div className=\"mb-3\">\r\n                                <CFormLabel htmlFor=\"name\">Name</CFormLabel>\r\n                                <CFormInput\r\n                                  type=\"text\"\r\n                                  id=\"name\"\r\n                                  placeholder=\"Agent Name\"\r\n                                  onChange={(e) => {\r\n                                    setName(e.target.value)\r\n                                  }}\r\n                                  // name={name}\r\n                                  defaultValue={name}\r\n                                />\r\n                                <CFormLabel htmlFor=\"email\">Email address</CFormLabel>\r\n                                <CFormInput\r\n                                  type=\"email\"\r\n                                  id=\"email\"\r\n                                  placeholder=\"agent@example.com\"\r\n                                  onChange={(e) => {\r\n                                    setEmail(e)\r\n                                  }}\r\n                                  defaultValue={email}\r\n                                />\r\n                                <CFormLabel htmlFor=\"phone\">Phone</CFormLabel>\r\n                                <CFormInput\r\n                                  type=\"text\"\r\n                                  id=\"phone\"\r\n                                  placeholder=\"Agent Phone\"\r\n                                  onChange={(e) => {\r\n                                    setPhone(e)\r\n                                  }}\r\n                                  maxLength={10}\r\n                                  defaultValue={phone}\r\n                                />\r\n                                <CFormLabel htmlFor=\"gender\">Gender</CFormLabel>\r\n                                <CFormSelect\r\n                                  defaultValue={gender}\r\n                                  id=\"gender\"\r\n                                  onChange={(e) => {\r\n                                    setGender(e.target.value)\r\n                                  }}\r\n                                >\r\n                                  <option value=\"\" selected disabled>\r\n                                    Select Gender\r\n                                  </option>\r\n                                  <option value=\"Male\">Male</option>\r\n                                  <option value=\"Female\">Female</option>\r\n                                  <option value=\"Others\">Others</option>\r\n                                </CFormSelect>\r\n                                <CFormLabel htmlFor=\"status\">Status</CFormLabel>\r\n                                <CFormSelect\r\n                                  defaultValue={status}\r\n                                  id=\"status\"\r\n                                  onChange={(e) => {\r\n                                    setStatus(e.target.value)\r\n                                  }}\r\n                                >\r\n                                  <option value=\"\" selected disabled>\r\n                                    Select Status\r\n                                  </option>\r\n                                  <option value=\"Active\">Active</option>\r\n                                  <option value=\"Deactive\">Deactive</option>\r\n                                </CFormSelect>\r\n                                <CFormLabel htmlFor=\"gender\">Agent Status Remark</CFormLabel>\r\n                                <CFormInput\r\n                                  type=\"text\"\r\n                                  id=\"remark\"\r\n                                  placeholder=\"Agent Status Remark\"\r\n                                  onChange={(e) => {\r\n                                    setStatusRemarks(e.target.value)\r\n                                  }}\r\n                                  // name={name}\r\n                                  defaultValue={statusRemarks}\r\n                                />\r\n                              </div>\r\n                            </CForm>\r\n                          </CModalBody>\r\n                          <CModalFooter>\r\n                            <CButton color=\"secondary\" onClick={() => setEditModalVisible(false)}>\r\n                              Cancel\r\n                            </CButton>\r\n                            <CButton color=\"primary\" onClick={() => edit_agent()}>\r\n                              Update\r\n                            </CButton>\r\n                          </CModalFooter>\r\n                        </CModal>\r\n                        {/* <CButton\r\n                          color=\"danger\"\r\n                          onClick={() => {\r\n                            setItemValue(item)\r\n                            setDeleteModalVisible(true)\r\n                          }}\r\n                        >\r\n                          Delete\r\n                        </CButton> */}\r\n                        <CModal\r\n                          alignment=\"center\"\r\n                          visible={deleteModalVisible}\r\n                          onClose={() => setDeleteModalVisible(false)}\r\n                        >\r\n                          <CModalHeader>\r\n                            <CModalTitle>Do You Want to Delete..</CModalTitle>\r\n                          </CModalHeader>\r\n                          <CModalFooter>\r\n                            <CButton color=\"secondary\" onClick={() => setVisible(false)}>\r\n                              Cancel\r\n                            </CButton>\r\n                            <CButton color=\"primary\" onClick={() => delete_agent(itemValue)}>\r\n                              Yes., Delete\r\n                            </CButton>\r\n                          </CModalFooter>\r\n                        </CModal>\r\n                        <Link to={`/profile/${item.agents_id}`}>\r\n                          <CButton color=\"info\" className=\"mx-2\">\r\n                            Wallet\r\n                          </CButton>\r\n                        </Link>\r\n                      </CTableDataCell>\r\n                    </CTableRow>\r\n                  )\r\n                  // }\r\n                })}\r\n              </CTableBody>\r\n            </CTable>\r\n          </CCardBody>\r\n        </CCard>\r\n      </CCol>\r\n    </CRow>\r\n  )\r\n}\r\n\r\nexport default Agents\r\n"],"names":["mainUrl","base","adminLogin","saveAgent","agentsList","editAgent","deleteAgent","saveUser","usersList","editUser","deleteUser","ticketCardView","gameList","saveGame","editGame","saveAnnouncement","announcementList","editAnnouncement","deleteAnnouncement","disclaimerList","editDisclaimer","agentDetails","agentPaidAmount","agentTransacationList","walletAction","startGame","postApiCall","async","url","request","token","localStorage","getItem","result","arguments","length","undefined","data","tokenData","header","headers","Authorization","axios","post","opsService","e","status","message","putApiCall","put","getApiCall","get","Agents","deleteModalVisible","setDeleteModalVisible","useState","itemValue","setItemValue","editModalVisible","setEditModalVisible","agentsData","setAgentsData","visible","setVisible","id","setId","name","setName","email","setEmail","phone","setPhone","password","setPassword","gender","setGender","setStatus","statusRemarks","setStatusRemarks","search","setSearch","useEffect","agents_list","save_agent","toast","error","req","target","value","code","clearFormData","success","_jsxs","CRow","children","CCol","xs","className","_jsx","CButton","color","onClick","onClose","ToastContainer","CModal","alignment","CModalHeader","CModalTitle","CModalBody","CForm","CFormLabel","htmlFor","CFormInput","type","placeholder","onChange","maxLength","defaultValue","disabled","randomPasswordGenerate","charset","newPassword","i","Math","floor","random","console","log","CFormSelect","selected","CModalFooter","CCard","CCardBody","CTable","hover","responsive","CTableHead","CTableRow","CTableHeaderCell","scope","CTableBody","map","item","index","CTableDataCell","agents_name","agents_email","agents_phone","agents_gender","agents_active_status","agents_status_remarks","agents_id","get_edit_value","alert","edit_agent","delete_agent","Link","to","concat"],"sourceRoot":""}