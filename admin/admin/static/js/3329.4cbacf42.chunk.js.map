{"version":3,"file":"static/js/3329.4cbacf42.chunk.js","mappings":"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","sources":["constants/Data.constant.js","services/AppSetting.js","services/Ops.js","views/tickets/Ticket.js"],"sourcesContent":["// const mainUrl = `http://localhost:8000/`\r\nconst mainUrl = `http://178.16.137.208:8000/`\r\n// const mainUrl = `https://api.sevenstartambola.com/`\r\n// const mainUrl = `http://api.sevenstartambola.com/`\r\nconst base = {\r\n  adminLogin: mainUrl + `adminLogin`,\r\n  saveAgent: mainUrl + `saveAgent`,\r\n  agentsList: mainUrl + `agentsList`,\r\n  editAgent: mainUrl + `editAgent`,\r\n  deleteAgent: mainUrl + `deleteAgent`,\r\n  saveUser: mainUrl + `saveUser`,\r\n  usersList: mainUrl + `usersList`,\r\n  editUser: mainUrl + `editUser`,\r\n  deleteUser: mainUrl + `deleteUser`,\r\n  // saveTicket: mainUrl + `saveTicket`,\r\n  // ticketList: mainUrl + `ticketList`,\r\n  // editTicket: mainUrl + `editTicket`,\r\n  // deleteTicket: mainUrl + `deleteTicket`,\r\n  ticketCardView: mainUrl + `ticketCardView`,\r\n  gameList: mainUrl + `gameList`,\r\n  saveGame: mainUrl + `saveGame`,\r\n  editGame: mainUrl + `editGame`,\r\n  saveAnnouncement: mainUrl + `saveAnnouncement`,\r\n  announcementList: mainUrl + `announcementList`,\r\n  editAnnouncement: mainUrl + `editAnnouncement`,\r\n  deleteAnnouncement: mainUrl + `deleteAnnouncement`,\r\n  disclaimerList: mainUrl + `disclaimerList`,\r\n  editDisclaimer: mainUrl + `editDisclaimer`,\r\n  agentDetails: mainUrl + 'agentDetails',\r\n  agentPaidAmount: mainUrl + 'agentPaidAmount',\r\n  agentTransacationList: mainUrl + 'agentTransacationList',\r\n  walletAction: mainUrl + 'walletAction',\r\n  startGame: mainUrl + 'matchedTicketForBooking',\r\n}\r\nexport { base }\r\n","import { base } from \"src/constants/Data.constant\";\r\nimport * as opsService from \"./Ops\";\r\n\r\nconst postApiCall = async (url, request) => {\r\n    let token = localStorage.getItem(\"token\");\r\n    try {\r\n        let result = await opsService.postData(\r\n            url,\r\n            request,\r\n            token\r\n        );\r\n        // console.log(\"resultPostdata\", result);\r\n        return result;\r\n    } catch (e) {\r\n        return { status: false, data: {}, message: e.message };\r\n    }\r\n}, putApiCall = async (url, request) => {\r\n    let token = localStorage.getItem(\"token\");\r\n\r\n    try {\r\n        let result = await opsService.putData(\r\n            url,\r\n            request,\r\n            token\r\n        );\r\n        // console.log(\"resultPostdata\", result);\r\n        return result;\r\n    } catch (e) {\r\n        return { status: false, data: {}, message: e.message };\r\n    }\r\n}, getApiCall = async (url) => {\r\n    try {\r\n        let result = await opsService.getData(\r\n            url,\r\n            false\r\n        );\r\n        return result;\r\n    } catch (e) {\r\n        return { status: false, data: {}, message: e.message };\r\n    }\r\n};\r\nexport { postApiCall, getApiCall, putApiCall };\r\n","import axios from \"axios\";\r\n\r\nconst postData = async (url = \"\", data, token = false) => {\r\n    // console.log(\"url\",url)\r\n    let tokenData = \"\";\r\n    if (token) {\r\n        tokenData = \"Bearer \" + token;\r\n    }\r\n    var header = { headers: { Authorization: tokenData } };\r\n    let response = await axios.post(url, data, header);\r\n    // let response = await axios.post(url, data, { headers:  { \"Authorization\": tokenData }});\r\n    return response.data;\r\n};\r\nconst postDataContent = async (url = \"\", data, token = false, contentType) => {\r\n    let tokenData = \"\";\r\n    if (token) {\r\n        tokenData = \"Bearer \" + token;\r\n    }\r\n    // console.log('contentType', contentType)\r\n    let response = await axios.post(url, data, {\r\n        headers: { Authorization: tokenData, \"content-type\": contentType },\r\n    });\r\n    return response.data;\r\n};\r\nconst putData = async (url = \"\", data, token = false) => {\r\n    if (token) {\r\n        token = \"Bearer \" + token;\r\n    }\r\n    let response = await axios.put(url, data, {\r\n        headers: { Authorization: token },\r\n    });\r\n    return response.data;\r\n};\r\nconst getData = async (url = \"\", token = false) => {\r\n    if (token) {\r\n        token = \"Bearer \" + token;\r\n    }\r\n    var header = { headers: { Authorization: token } };\r\n    let response = await axios.get(url, header);\r\n    return response.data;\r\n};\r\nconst deleteData = async (url = \"\", token = false) => {\r\n    if (token) {\r\n        token = \"Bearer \" + token;\r\n    }\r\n    let response = await axios.delete(url, {\r\n        headers: { Authorization: token },\r\n    });\r\n    return response.data;\r\n};\r\nexport async function downloadFile(fileUrl, data, token = false) {\r\n    if (token) {\r\n        token = \"Bearer \" + token;\r\n    }\r\n    axios\r\n        .post(fileUrl, data, {\r\n            responseType: \"blob\",\r\n            headers: { Authorization: token },\r\n        })\r\n        .then(function (response) {\r\n            const type = response.headers[\"content-type\"];\r\n            const blob = new Blob([response.data], {\r\n                type: type,\r\n                encoding: \"UTF-8\",\r\n            });\r\n            const link = document.createElement(\"a\");\r\n            link.href = window.URL.createObjectURL(blob);\r\n            link.download = data.fileName;\r\n            link.click();\r\n        });\r\n}\r\n\r\nexport { postData, getData, deleteData, putData, postDataContent };\r\n","import React, { useEffect, useState } from 'react'\r\nimport {\r\n  CButton,\r\n  CCard,\r\n  CCardBody,\r\n  CCardHeader,\r\n  CCol,\r\n  CForm,\r\n  CFormInput,\r\n  CFormLabel,\r\n  CFormTextarea,\r\n  CModal,\r\n  CModalBody,\r\n  CModalFooter,\r\n  CModalHeader,\r\n  CModalTitle,\r\n  CRow,\r\n  CTable,\r\n  CTableBody,\r\n  CTableCaption,\r\n  CTableDataCell,\r\n  CTableHead,\r\n  CTableHeaderCell,\r\n  CTableRow,\r\n} from '@coreui/react'\r\nimport { getApiCall, postApiCall, putApiCall } from 'src/services/AppSetting';\r\nimport { base } from 'src/constants/Data.constant';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nconst Ticket = () => {\r\n  const [deleteModalVisible, setDeleteModalVisible] = useState(false);\r\n  const [itemValue, setItemValue] = useState(\"\");\r\n  const [editModalVisible, setEditModalVisible] = useState(false);\r\n  const [ticketData, setTicketData] = useState([]);\r\n  const [visible, setVisible] = useState(false)\r\n  const [id, setId] = useState(\"\");\r\n  const [ticketSerialNumber, setTicketSerialNumber] = useState(\"\");\r\n  const [ticketNumber, setTicketNumber] = useState(\"\");\r\n  const [ticketAmount, setTicketAmount] = useState(\"\");\r\n  const [ticketStatus, setTicketStatus] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    ticket_list();\r\n  }, []);\r\n\r\n  const ticket_list = async () => {\r\n    let result = await getApiCall(base.ticketList)\r\n    setTicketData(result)\r\n  }\r\n\r\n  const save_ticket = async () => {\r\n    let req = {\r\n      ticketSerialNumber: ticketSerialNumber.target.value,\r\n      ticketNumber: ticketNumber.target.value,\r\n      ticketAmount: ticketAmount.target.value,\r\n      ticketStatus: ticketStatus.target.value\r\n    }\r\n    let result = await postApiCall(base.saveTicket, req)\r\n    if (result.code == 200) {\r\n      setVisible(false);\r\n      toast.success(\"Successfully Created..!\");\r\n    }\r\n  }\r\n\r\n  const delete_ticket = async (value) => {\r\n    let req = {\r\n      id: value.ticket_id,\r\n      status: \"1\"\r\n    }\r\n    let result = await putApiCall(base.deleteTicket, req)\r\n    if (result.code == 200) {\r\n      toast.success(\"Updated Successfully..!\");\r\n      setEditModalVisible(false);\r\n    }\r\n  }\r\n\r\n  const get_edit_value = async (item) => {\r\n    setEditModalVisible(true)\r\n    setId(item.ticket_id);\r\n    setTicketSerialNumber(item.ticket_serial_number);\r\n    setTicketNumber(item.ticket_number);\r\n    setTicketAmount(item.ticket_amount);\r\n    setTicketStatus(item.ticket_status);\r\n  }\r\n\r\n  const edit_ticket = async () => {\r\n    let req = {\r\n      id: id,\r\n      ticketSerialNumber: ticketSerialNumber,\r\n      ticketNumber: ticketNumber,\r\n      ticketAmount: ticketAmount,\r\n      ticketStatus: ticketStatus,\r\n    }\r\n    let result = await putApiCall(base.editTicket, req)\r\n    if (result.code == 200) {\r\n      toast.error(\"Deleted Successfully..!\");\r\n    }\r\n  }\r\n\r\n  return (\r\n    <CRow>\r\n      <CCol xs={12} className='mb-4'>\r\n        <CButton color=\"primary\" onClick={() => { setVisible(true) }} onClose={() => setVisible(false)}>Add</CButton>\r\n        <ToastContainer />\r\n        <CModal alignment=\"center\" visible={visible} onClose={() => setVisible(false)}>\r\n          <CModalHeader>\r\n            <CModalTitle>Add</CModalTitle>\r\n          </CModalHeader>\r\n          <CModalBody>\r\n            <CForm>\r\n              <div className=\"mb-3\">\r\n                <CFormLabel htmlFor=\"ticketSerialNumber\">Ticket Serial Number</CFormLabel>\r\n                <CFormInput\r\n                  type=\"text\"\r\n                  id=\"ticketSerialNumber\"\r\n                  placeholder=\"Ticket Serial Number\"\r\n                  onChange={(e) => { setTicketSerialNumber(e) }}\r\n                />\r\n                <CFormLabel htmlFor=\"ticketNumber\">Ticket Number</CFormLabel>\r\n                <CFormInput\r\n                  type=\"text\"\r\n                  id=\"ticketNumber\"\r\n                  placeholder=\"Ticket Number\"\r\n                  onChange={(e) => { setTicketNumber(e) }}\r\n                />\r\n                <CFormLabel htmlFor=\"ticketAmount\">Ticket Amount</CFormLabel>\r\n                <CFormInput\r\n                  type=\"text\"\r\n                  id=\"ticketAmount\"\r\n                  placeholder=\"Ticket Amount\"\r\n                  onChange={(e) => { setTicketAmount(e) }}\r\n                />\r\n                <CFormLabel htmlFor=\"ticketStatus\">Ticket Status</CFormLabel>\r\n                <CFormInput\r\n                  type=\"text\"\r\n                  id=\"ticketStatus\"\r\n                  placeholder=\"Ticket Status\"\r\n                  onChange={(e) => { setTicketStatus(e) }}\r\n                />\r\n              </div>\r\n            </CForm>\r\n          </CModalBody>\r\n          <CModalFooter>\r\n            <CButton color=\"secondary\" onClick={() => setEditModalVisible(false)}>\r\n              Cancel\r\n            </CButton>\r\n            <CButton color=\"primary\" onClick={() => save_ticket()}>Save</CButton>\r\n          </CModalFooter>\r\n        </CModal>\r\n      </CCol>\r\n      <CCol xs={12}>\r\n        <CCard className=\"mb-4\">\r\n          <CCardBody>\r\n            <CTable hover responsive>\r\n              <CTableHead>\r\n                <CTableRow>\r\n                  <CTableHeaderCell scope=\"col\">#</CTableHeaderCell>\r\n                  <CTableHeaderCell scope=\"col\">Ticket Serial Number</CTableHeaderCell>\r\n                  <CTableHeaderCell scope=\"col\">Ticket Number</CTableHeaderCell>\r\n                  <CTableHeaderCell scope=\"col\">Ticket Amount</CTableHeaderCell>\r\n                  <CTableHeaderCell scope=\"col\">Ticket Status</CTableHeaderCell>\r\n                  <CTableHeaderCell scope=\"col\">Action</CTableHeaderCell>\r\n                </CTableRow>\r\n              </CTableHead>\r\n              <CTableBody>\r\n                {ticketData.map((item, index) => {\r\n                  return <CTableRow key={index}>\r\n                    <CTableHeaderCell scope=\"row\">{index + 1}</CTableHeaderCell>\r\n                    <CTableDataCell>{item.ticket_serial_number}</CTableDataCell>\r\n                    <CTableDataCell>{item.ticket_number}</CTableDataCell>\r\n                    <CTableDataCell>{item.ticket_amount}</CTableDataCell>\r\n                    <CTableDataCell>{item.ticket_status}</CTableDataCell>\r\n                    <CTableDataCell>\r\n                      <CButton color=\"warning\" className='me-2' onClick={() => { get_edit_value(item) }}>Edit</CButton>\r\n                      <CModal alignment=\"center\" visible={editModalVisible}>\r\n                        <CModalHeader>\r\n                          <CModalTitle>Edit</CModalTitle>\r\n                        </CModalHeader>\r\n                        <CModalBody>\r\n                          <CForm>\r\n                            <div className=\"mb-3\">\r\n                              <CFormLabel htmlFor=\"ticketSerialNumber\">Ticket Serial Number</CFormLabel>\r\n                              <CFormInput\r\n                                type=\"text\"\r\n                                id=\"ticketSerialNumber\"\r\n                                placeholder=\"Ticket Serial Number\"\r\n                                onChange={(e) => { setTicketSerialNumber(e) }}\r\n                                defaultValue={ticketSerialNumber}\r\n                              />\r\n                              <CFormLabel htmlFor=\"ticketNumber\">Ticket Number</CFormLabel>\r\n                              <CFormInput\r\n                                type=\"text\"\r\n                                id=\"ticketNumber\"\r\n                                placeholder=\"Ticket Number\"\r\n                                onChange={(e) => { setTicketNumber(e) }}\r\n                                defaultValue={ticketNumber}\r\n                              />\r\n                              <CFormLabel htmlFor=\"ticketAmount\">Ticket Amount</CFormLabel>\r\n                              <CFormInput\r\n                                type=\"text\"\r\n                                id=\"ticketAmount\"\r\n                                placeholder=\"Ticket Amount\"\r\n                                onChange={(e) => { setTicketAmount(e) }}\r\n                                defaultValue={ticketAmount}\r\n                              />\r\n                              <CFormLabel htmlFor=\"ticketStatus\">Ticket Status</CFormLabel>\r\n                              <CFormInput\r\n                                type=\"text\"\r\n                                id=\"ticketStatus\"\r\n                                placeholder=\"Ticket Status\"\r\n                                onChange={(e) => { setTicketStatus(e) }}\r\n                                defaultValue={ticketStatus}\r\n                              />\r\n                            </div>\r\n                          </CForm>\r\n                        </CModalBody>\r\n                        <CModalFooter>\r\n                          <CButton color=\"secondary\" onClick={() => setEditModalVisible(false)}>\r\n                            Cancel\r\n                          </CButton>\r\n                          <CButton color=\"primary\" onClick={() => edit_ticket()}>Update</CButton>\r\n                        </CModalFooter>\r\n                      </CModal>\r\n                      <CButton color=\"danger\" onClick={() => { setItemValue(item); setDeleteModalVisible(true) }}>Delete</CButton>\r\n                      <CModal alignment=\"center\" visible={deleteModalVisible} onClose={() => setDeleteModalVisible(false)}>\r\n                        <CModalHeader>\r\n                          <CModalTitle>Do You Want to Delete..</CModalTitle>\r\n                        </CModalHeader>\r\n                        <CModalFooter>\r\n                          <CButton color=\"secondary\" onClick={() => setVisible(false)}>\r\n                            Cancel\r\n                          </CButton>\r\n                          <CButton color=\"primary\" onClick={() => delete_ticket(itemValue)}>Yes., Delete</CButton>\r\n                        </CModalFooter>\r\n                      </CModal>\r\n                    </CTableDataCell>\r\n                  </CTableRow>\r\n                })}\r\n              </CTableBody>\r\n            </CTable>\r\n          </CCardBody>\r\n        </CCard>\r\n      </CCol>\r\n    </CRow>\r\n  )\r\n}\r\n\r\nexport default Ticket"],"names":["mainUrl","base","adminLogin","saveAgent","agentsList","editAgent","deleteAgent","saveUser","usersList","editUser","deleteUser","ticketCardView","gameList","saveGame","editGame","saveAnnouncement","announcementList","editAnnouncement","deleteAnnouncement","disclaimerList","editDisclaimer","agentDetails","agentPaidAmount","agentTransacationList","walletAction","startGame","postApiCall","async","url","request","token","localStorage","getItem","result","arguments","length","undefined","data","tokenData","header","headers","Authorization","axios","post","opsService","e","status","message","putApiCall","put","getApiCall","get","Ticket","deleteModalVisible","setDeleteModalVisible","useState","itemValue","setItemValue","editModalVisible","setEditModalVisible","ticketData","setTicketData","visible","setVisible","id","setId","ticketSerialNumber","setTicketSerialNumber","ticketNumber","setTicketNumber","ticketAmount","setTicketAmount","ticketStatus","setTicketStatus","useEffect","ticket_list","ticketList","_jsxs","CRow","children","CCol","xs","className","_jsx","CButton","color","onClick","onClose","ToastContainer","CModal","alignment","CModalHeader","CModalTitle","CModalBody","CForm","CFormLabel","htmlFor","CFormInput","type","placeholder","onChange","CModalFooter","req","target","value","saveTicket","code","toast","success","save_ticket","CCard","CCardBody","CTable","hover","responsive","CTableHead","CTableRow","CTableHeaderCell","scope","CTableBody","map","item","index","CTableDataCell","ticket_serial_number","ticket_number","ticket_amount","ticket_status","ticket_id","get_edit_value","defaultValue","editTicket","error","edit_ticket","deleteTicket","delete_ticket"],"sourceRoot":""}