{"version":3,"file":"static/js/3765.b729ca21.chunk.js","mappings":"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","sources":["constants/Data.constant.js","services/AppSetting.js","services/Ops.js","views/game/Game.js","views/game/TicketView.js"],"sourcesContent":["// const mainUrl = `http://localhost:8000/`\r\nconst mainUrl = `http://178.16.137.208:8000/`\r\n// const mainUrl = `https://api.sevenstartambola.com/`\r\n// const mainUrl = `http://api.sevenstartambola.com/`\r\nconst base = {\r\n  adminLogin: mainUrl + `adminLogin`,\r\n  saveAgent: mainUrl + `saveAgent`,\r\n  agentsList: mainUrl + `agentsList`,\r\n  editAgent: mainUrl + `editAgent`,\r\n  deleteAgent: mainUrl + `deleteAgent`,\r\n  saveUser: mainUrl + `saveUser`,\r\n  usersList: mainUrl + `usersList`,\r\n  editUser: mainUrl + `editUser`,\r\n  deleteUser: mainUrl + `deleteUser`,\r\n  // saveTicket: mainUrl + `saveTicket`,\r\n  // ticketList: mainUrl + `ticketList`,\r\n  // editTicket: mainUrl + `editTicket`,\r\n  // deleteTicket: mainUrl + `deleteTicket`,\r\n  ticketCardView: mainUrl + `ticketCardView`,\r\n  gameList: mainUrl + `gameList`,\r\n  saveGame: mainUrl + `saveGame`,\r\n  editGame: mainUrl + `editGame`,\r\n  saveAnnouncement: mainUrl + `saveAnnouncement`,\r\n  announcementList: mainUrl + `announcementList`,\r\n  editAnnouncement: mainUrl + `editAnnouncement`,\r\n  deleteAnnouncement: mainUrl + `deleteAnnouncement`,\r\n  disclaimerList: mainUrl + `disclaimerList`,\r\n  editDisclaimer: mainUrl + `editDisclaimer`,\r\n  agentDetails: mainUrl + 'agentDetails',\r\n  agentPaidAmount: mainUrl + 'agentPaidAmount',\r\n  agentTransacationList: mainUrl + 'agentTransacationList',\r\n  walletAction: mainUrl + 'walletAction',\r\n  startGame: mainUrl + 'matchedTicketForBooking',\r\n}\r\nexport { base }\r\n","import { base } from \"src/constants/Data.constant\";\r\nimport * as opsService from \"./Ops\";\r\n\r\nconst postApiCall = async (url, request) => {\r\n    let token = localStorage.getItem(\"token\");\r\n    try {\r\n        let result = await opsService.postData(\r\n            url,\r\n            request,\r\n            token\r\n        );\r\n        // console.log(\"resultPostdata\", result);\r\n        return result;\r\n    } catch (e) {\r\n        return { status: false, data: {}, message: e.message };\r\n    }\r\n}, putApiCall = async (url, request) => {\r\n    let token = localStorage.getItem(\"token\");\r\n\r\n    try {\r\n        let result = await opsService.putData(\r\n            url,\r\n            request,\r\n            token\r\n        );\r\n        // console.log(\"resultPostdata\", result);\r\n        return result;\r\n    } catch (e) {\r\n        return { status: false, data: {}, message: e.message };\r\n    }\r\n}, getApiCall = async (url) => {\r\n    try {\r\n        let result = await opsService.getData(\r\n            url,\r\n            false\r\n        );\r\n        return result;\r\n    } catch (e) {\r\n        return { status: false, data: {}, message: e.message };\r\n    }\r\n};\r\nexport { postApiCall, getApiCall, putApiCall };\r\n","import axios from \"axios\";\r\n\r\nconst postData = async (url = \"\", data, token = false) => {\r\n    // console.log(\"url\",url)\r\n    let tokenData = \"\";\r\n    if (token) {\r\n        tokenData = \"Bearer \" + token;\r\n    }\r\n    var header = { headers: { Authorization: tokenData } };\r\n    let response = await axios.post(url, data, header);\r\n    // let response = await axios.post(url, data, { headers:  { \"Authorization\": tokenData }});\r\n    return response.data;\r\n};\r\nconst postDataContent = async (url = \"\", data, token = false, contentType) => {\r\n    let tokenData = \"\";\r\n    if (token) {\r\n        tokenData = \"Bearer \" + token;\r\n    }\r\n    // console.log('contentType', contentType)\r\n    let response = await axios.post(url, data, {\r\n        headers: { Authorization: tokenData, \"content-type\": contentType },\r\n    });\r\n    return response.data;\r\n};\r\nconst putData = async (url = \"\", data, token = false) => {\r\n    if (token) {\r\n        token = \"Bearer \" + token;\r\n    }\r\n    let response = await axios.put(url, data, {\r\n        headers: { Authorization: token },\r\n    });\r\n    return response.data;\r\n};\r\nconst getData = async (url = \"\", token = false) => {\r\n    if (token) {\r\n        token = \"Bearer \" + token;\r\n    }\r\n    var header = { headers: { Authorization: token } };\r\n    let response = await axios.get(url, header);\r\n    return response.data;\r\n};\r\nconst deleteData = async (url = \"\", token = false) => {\r\n    if (token) {\r\n        token = \"Bearer \" + token;\r\n    }\r\n    let response = await axios.delete(url, {\r\n        headers: { Authorization: token },\r\n    });\r\n    return response.data;\r\n};\r\nexport async function downloadFile(fileUrl, data, token = false) {\r\n    if (token) {\r\n        token = \"Bearer \" + token;\r\n    }\r\n    axios\r\n        .post(fileUrl, data, {\r\n            responseType: \"blob\",\r\n            headers: { Authorization: token },\r\n        })\r\n        .then(function (response) {\r\n            const type = response.headers[\"content-type\"];\r\n            const blob = new Blob([response.data], {\r\n                type: type,\r\n                encoding: \"UTF-8\",\r\n            });\r\n            const link = document.createElement(\"a\");\r\n            link.href = window.URL.createObjectURL(blob);\r\n            link.download = data.fileName;\r\n            link.click();\r\n        });\r\n}\r\n\r\nexport { postData, getData, deleteData, putData, postDataContent };\r\n","import React, { useEffect, useState } from 'react'\r\nimport {\r\n  CInput,\r\n  CButton,\r\n  CCard,\r\n  CCardBody,\r\n  CCardHeader,\r\n  CCol,\r\n  CForm,\r\n  CFormCheck,\r\n  CFormInput,\r\n  CFormLabel,\r\n  CFormSwitch,\r\n  CFormTextarea,\r\n  CModal,\r\n  CModalBody,\r\n  CModalFooter,\r\n  CModalHeader,\r\n  CModalTitle,\r\n  CRow,\r\n  CTable,\r\n  CTableBody,\r\n  CTableCaption,\r\n  CTableDataCell,\r\n  CTableHead,\r\n  CTableHeaderCell,\r\n  CTableRow,\r\n  CFormSelect,\r\n} from '@coreui/react'\r\nimport { getApiCall, postApiCall, putApiCall } from 'src/services/AppSetting'\r\nimport { base } from 'src/constants/Data.constant'\r\nimport Toast from 'src/components/toast/Toast'\r\nimport { ToastContainer, toast } from 'react-toastify'\r\nimport 'react-toastify/dist/ReactToastify.css'\r\nimport TicketView from './TicketView'\r\nimport { Link } from 'react-router-dom'\r\nimport TimePicker from 'react-time-picker'\r\n\r\nconst Game = () => {\r\n  const [gameStartId, setGameStartId] = useState('')\r\n  const [deleteModalVisible, setDeleteModalVisible] = useState(false)\r\n  const [editModalVisible, setEditModalVisible] = useState(false)\r\n  const [editOption, setEditOption] = useState(false)\r\n  const [gameData, setGameData] = useState([])\r\n  const [visible, setVisible] = useState(false)\r\n  const [gameId, setGameId] = useState('')\r\n  const [id, setId] = useState('')\r\n  const [gameName, setGameName] = useState('')\r\n  const [gameStartDate, setGameStartDate] = useState('')\r\n  const [gameStartTime, setGameStartTime] = useState('')\r\n  const [gameMaximumTicketSell, setGameMaximumTicketSell] = useState('')\r\n  const [gameAmount, setGameAmount] = useState('')\r\n  const [gameAmountPerTicketToAgent, setGameAmountPerTicketToAgent] = useState('')\r\n  const [gameQuickFire, setGameQuickFire] = useState(false)\r\n  const [gameQuickSevenPrize, setGameQuickSevenPrize] = useState('')\r\n  const [gameStar, setGameStar] = useState(false)\r\n  const [gameTopLine, setGameTopLine] = useState(false)\r\n  const [gameTopLinePrize, setGameTopLinePrize] = useState(false)\r\n  const [gameMiddleLine, setGameMiddleLine] = useState(false)\r\n  const [gameMiddleLinePrize, setGameMiddleLinePrize] = useState(false)\r\n  const [gameBottomLine, setGameBottomLine] = useState(false)\r\n  const [gameBottomLinePrize, setGameBottomLinePrize] = useState(false)\r\n  const [gameCorner, setGameCorner] = useState(false)\r\n  const [gameHalfSheet, setGameHalfSheet] = useState(false)\r\n  const [gameHousefull, setGameHousefull] = useState(false)\r\n  const [gameHouseFullPrize, setGameHouseFullPrize] = useState(false)\r\n  const [gameSecondHousefull, setGameSecondHousefull] = useState(false)\r\n  const [gameSecondHouseFullPrize, setGameSecondHouseFullPrize] = useState(false)\r\n  const [gameStatus, setGameStatus] = useState('')\r\n  const [time, setTime] = useState(new Date())\r\n  const [search, setSearch] = useState([])\r\n  const [prevPage, setPrevPage] = useState(0)\r\n  const [nextPage, setNextPage] = useState(10)\r\n\r\n  const handleTimeChange = (newTime) => {\r\n    setTime(newTime)\r\n  }\r\n\r\n  const clearState = () => {\r\n    setGameQuickFire(false)\r\n    setGameTopLine(false)\r\n    setGameMiddleLine(false)\r\n    setGameBottomLine(false)\r\n    setGameHousefull(false)\r\n    setGameSecondHousefull(false)\r\n  }\r\n\r\n  useEffect(() => {\r\n    // game_list(prevPage, nextPage)\r\n    game_list()\r\n  }, [])\r\n\r\n  const game_list = async (min, max) => {\r\n    let result = await getApiCall(base.gameList)\r\n    // console.log('resulttttList', result)\r\n    // let req = {\r\n    //   min: min,\r\n    //   max: max,\r\n    // }\r\n    // console.log('reqreqreq', req)\r\n    // let result = await postApiCall(base.gameList, req)\r\n    // console.log('resultresultresult', result)\r\n    setGameData(result)\r\n    // setSearch(result.data)\r\n  }\r\n\r\n  const game_start = async () => {\r\n    // let req = {\r\n    //   gameId: id,\r\n    // }\r\n    // console.log('reqgamestartid', req)\r\n    // let result = await postApiCall(base.startGame, req)\r\n    let result = await getApiCall(base.startGame)\r\n    console.log('resultofstartgame', result)\r\n    if (result.code == 200) {\r\n      setEditModalVisible(false)\r\n    }\r\n  }\r\n\r\n  const save_game = async () => {\r\n    console.log(\r\n      'gameQuickSevenPrizelength',\r\n      gameQuickSevenPrize.target.value,\r\n      gameTopLinePrize.target.value,\r\n      gameMiddleLinePrize.target.value,\r\n      gameBottomLinePrize.target.value,\r\n      gameHouseFullPrize.target.value,\r\n      gameSecondHouseFullPrize.target.value\r\n    )\r\n    if (gameName == '') {\r\n      toast.error('Game Name is Mandatory')\r\n    } else if (gameStartDate == '') {\r\n      toast.error('Game Start Date is Mandatory')\r\n    } else if (gameStartTime == '') {\r\n      toast.error('Game Start Time is Mandatory')\r\n    } else if (gameMaximumTicketSell == '') {\r\n      toast.error('Game Maximum Ticket Sell is Mandatory')\r\n    } else if (gameAmount == '') {\r\n      toast.error('Game Amount is Mandatory')\r\n    } else if (gameAmountPerTicketToAgent == '') {\r\n      toast.error('Game Amount Per Ticket To Agent is Mandatory')\r\n      // } else if (gameQuickFire == true && gameQuickSevenPrize.target.value == '') {\r\n      //   toast.error('Quick Seven Prize is Mandatory')\r\n      // } else if (gameTopLine == true && gameTopLinePrize.target.value == '') {\r\n      //   toast.error('Quick Seven Prize is Mandatory')\r\n      // } else if (gameMiddleLine == true && gameMiddleLinePrize.target.value == '') {\r\n      //   toast.error('Quick Seven Prize is Mandatory')\r\n      // } else if (gameBottomLine == true && gameBottomLinePrize.target.value == '') {\r\n      //   toast.error('Quick Seven Prize is Mandatory')\r\n      // } else if (gameHousefull == true && gameHouseFullPrize.target.value == '') {\r\n      //   toast.error('Quick Seven Prize is Mandatory')\r\n      // } else if (gameSecondHousefull == true && gameSecondHouseFullPrize.target.value == '') {\r\n      //   toast.error('Quick Seven Prize is Mandatory')\r\n    } else {\r\n      let req = {\r\n        gameName: gameName.target.value,\r\n        gameStartDate: gameStartDate.target.value,\r\n        gameStartTime: gameStartTime.target.value,\r\n        gameMaximumTicketSell: gameMaximumTicketSell.target.value,\r\n        gameAmount: gameAmount.target.value,\r\n        gameAmountPerTicketToAgent: gameAmountPerTicketToAgent.target.value,\r\n        gameQuickFire: gameQuickFire,\r\n        gameQuickSevenPrize: gameQuickFire == false ? '0' : gameQuickSevenPrize.target.value,\r\n        // gameStar: gameStar,\r\n        gameTopLine: gameTopLine,\r\n        gameTopLinePrize: gameTopLine == false ? '0' : gameTopLinePrize.target.value,\r\n        gameMiddleLine: gameMiddleLine,\r\n        gameMiddleLinePrize: gameMiddleLine == false ? '0' : gameMiddleLinePrize.target.value,\r\n        gameBottomLine: gameBottomLine,\r\n        gameBottomLinePrize: gameBottomLine == false ? '0' : gameBottomLinePrize.target.value,\r\n        // gameCorner: gameCorner,\r\n        // gameHalfSheet: gameHalfSheet,\r\n        gameHousefull: gameHousefull,\r\n        gameHouseFullPrize: gameHousefull == false ? '0' : gameHouseFullPrize.target.value,\r\n        gameSecondHousefull: gameSecondHousefull,\r\n        gameSecondHouseFullPrize:\r\n          gameSecondHousefull == false ? '0' : gameSecondHouseFullPrize.target.value,\r\n        gameStatus: 'Deactive',\r\n      }\r\n      console.log('saveGameApiCallreq', req)\r\n      // debugger;\r\n      let result = await postApiCall(base.saveGame, req)\r\n      // console.log(\"saveGameApiCall\", result);\r\n      if (result.code == 200) {\r\n        setVisible(false)\r\n        game_list()\r\n        successToast()\r\n        // <Toast />\r\n      }\r\n    }\r\n  }\r\n\r\n  // const indexOfLastRecord = currentPage * recordsPerPage;\r\n  // const indexOfFirstRecord = indexOfLastRecord - recordsPerPage;\r\n  // // Records to be displayed on the current page\r\n  // const currentRecords = data.slice(indexOfFirstRecord,indexOfLastRecord);\r\n  // const nPages = Math.ceil(data.length / recordsPerPage)\r\n\r\n  const handlePrevFunction = () => {\r\n    setPrevPage(Number(prevPage) + 10)\r\n    game_list(Number(prevPage) - 10, nextPage)\r\n  }\r\n\r\n  const handleNextFunction = () => {\r\n    setNextPage(Number(nextPage) + 10)\r\n    game_list(prevPage, Number(nextPage) + 10)\r\n  }\r\n\r\n  const successToast = () => {\r\n    toast.success('Success !', {\r\n      position: toast.POSITION.TOP_RIGHT,\r\n    })\r\n  }\r\n\r\n  const delete_game = async (id) => {\r\n    console.log('delete_game_id_log', id)\r\n    let req = {\r\n      id: id,\r\n      status: '1',\r\n    }\r\n    console.log('reqqqq', req)\r\n    let result = await putApiCall(base.deleteGame, req)\r\n    console.log('reqqqqresult', result)\r\n    if (result.length > 0) {\r\n      alert('Deleted Successfully...')\r\n    }\r\n  }\r\n\r\n  const get_edit_value = async (item) => {\r\n    console.log('get_edit_valueeee', item)\r\n    setEditModalVisible(true)\r\n    setId(item.users_id)\r\n    setGameName(item.game_name)\r\n    setGameStartDate(item.game_start_date)\r\n    setGameStartTime(item.game_start_time)\r\n    setGameMaximumTicketSell(item.game_maximum_ticket_sell)\r\n    setGameAmount(item.game_amount)\r\n    setGameQuickFire(item.game_quick_fire)\r\n    setGameStar(item.game_star)\r\n    setGameTopLine(item.game_top_line)\r\n    setGameMiddleLine(item.game_middle_line)\r\n    setGameBottomLine(item.game_bottom_line)\r\n    setGameCorner(item.game_corner)\r\n    setGameHalfSheet(item.game_half_sheet)\r\n    setGameHousefull(item.game_housefull)\r\n    setGameStatus(item.game_status)\r\n  }\r\n\r\n  const edit_game = async () => {\r\n    if (gameName == '') {\r\n      toast.error('Game Name is Mandatory')\r\n    } else if (gameStartDate == '') {\r\n      toast.error('Game Start Date is Mandatory')\r\n    } else if (gameStartTime == '') {\r\n      toast.error('Game Start Time is Mandatory')\r\n    } else if (gameMaximumTicketSell == '') {\r\n      toast.error('Game Maximum Ticket Sell is Mandatory')\r\n    } else if (gameAmount == '') {\r\n      toast.error('Game Amount is Mandatory')\r\n    } else if (gameStatus == '') {\r\n      toast.error('Game Amount Per Ticket To Agent is Mandatory')\r\n    } else {\r\n      let req = {\r\n        id: id,\r\n        gameName: gameName,\r\n        gameStartDate: gameStartDate,\r\n        gameStartTime: gameStartTime,\r\n        gameMaximumTicketSell: gameMaximumTicketSell,\r\n        gameAmount: gameAmount,\r\n        gameQuickFire: gameQuickFire,\r\n        gameStar: gameStar,\r\n        gameTopLine: gameTopLine,\r\n        gameMiddleLine: gameMiddleLine,\r\n        gameBottomLine: gameBottomLine,\r\n        gameCorner: gameCorner,\r\n        gameHalfSheet: gameHalfSheet,\r\n        gameHousefull: gameHousefull,\r\n        gameStatus: gameStatus,\r\n      }\r\n      console.log('reqofedituser', req)\r\n      let result = await putApiCall(base.editGame, req)\r\n      console.log('resultofedituser', result)\r\n      if (result.code == 200) {\r\n        successToast()\r\n        setEditModalVisible(false)\r\n        setEditOption(false)\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <CRow>\r\n      <CCol xs={12} className=\"mb-4\">\r\n        <div className=\"d-flex justify-content-between\">\r\n          <CButton\r\n            color=\"primary\"\r\n            onClick={() => {\r\n              setVisible(true)\r\n            }}\r\n            onClose={() => setVisible(false)}\r\n          >\r\n            Create Game\r\n          </CButton>\r\n          {/* <div className=\"w-25\">\r\n            <CFormInput\r\n              type=\"text\"\r\n              id=\"search\"\r\n              placeholder=\"Search\"\r\n              onChange={(e) => {\r\n                setSearch(\r\n                  gameData.filter((data) =>\r\n                    data.game_name.toLowerCase().includes(e.target.value.toLowerCase())\r\n                  )\r\n                )\r\n              }}\r\n            />\r\n          </div> */}\r\n        </div>\r\n        <ToastContainer />\r\n        <CModal\r\n          alignment=\"center\"\r\n          visible={visible}\r\n          onClose={() => {\r\n            setVisible(false)\r\n            clearState()\r\n          }}\r\n        >\r\n          <CModalHeader>\r\n            <CModalTitle>Add</CModalTitle>\r\n          </CModalHeader>\r\n          <CModalBody>\r\n            <CForm>\r\n              <div className=\"mb-3\">\r\n                <CFormLabel htmlFor=\"gameName\">Game Name</CFormLabel>\r\n                <CFormInput\r\n                  type=\"text\"\r\n                  id=\"gameName\"\r\n                  placeholder=\"Game Name\"\r\n                  onChange={(e) => {\r\n                    setGameName(e)\r\n                  }}\r\n                />\r\n                <CFormLabel htmlFor=\"gameStartDate\">Game Start Date</CFormLabel>\r\n                <CFormInput\r\n                  type=\"date\"\r\n                  id=\"gameStartDate\"\r\n                  placeholder=\"Game Start Date\"\r\n                  onChange={(e) => {\r\n                    setGameStartDate(e)\r\n                  }}\r\n                  maxDate={new Date()}\r\n                />\r\n                {/* <input\r\n                  type=\"time\"\r\n                  id=\"gameStartTime\"\r\n                  placeholder=\"Game Start Time\"\r\n                // onChange={(e) => { setGameStartTime(e) }}\r\n                /> */}\r\n                <CFormLabel htmlFor=\"gameStartTime\">Game Start Time</CFormLabel>\r\n                {/* <CTimePicker label=\"Game Start Time\" locale=\"en-US\" time=\"02:17:35 PM\" />*/}\r\n                <CFormInput\r\n                  type=\"time\"\r\n                  id=\"gameStartTime\"\r\n                  placeholder=\"Game Start Time\"\r\n                  onChange={(e) => {\r\n                    setGameStartTime(e)\r\n                  }}\r\n                />\r\n                {/* <div> */}\r\n                {/* <CInput\r\n                  type=\"text\"\r\n                  value={time.toString()} // Display the selected time\r\n                  readOnly // Ensure the input is read-only\r\n                />\r\n                <TimePicker\r\n                  onChange={handleTimeChange}\r\n                  value={time}\r\n                /> */}\r\n                {/* </div> */}\r\n                <CFormLabel htmlFor=\"gameMaximumTicketSell\">Game Maximum Ticket Sell</CFormLabel>\r\n                <CFormInput\r\n                  type=\"text\"\r\n                  id=\"gameMaximumTicketSell\"\r\n                  placeholder=\"Game Maximum Ticket Sell\"\r\n                  onChange={(e) => {\r\n                    setGameMaximumTicketSell(e)\r\n                  }}\r\n                />\r\n                <CFormLabel htmlFor=\"gameAmount\">Game Amount Per Ticket</CFormLabel>\r\n                <CFormInput\r\n                  type=\"text\"\r\n                  id=\"gameAmount\"\r\n                  placeholder=\"Game Amount Per Ticket\"\r\n                  onChange={(e) => {\r\n                    setGameAmount(e)\r\n                  }}\r\n                />\r\n                <CFormLabel htmlFor=\"gameAmount\">Game Amount Pay Per Ticket to Agents</CFormLabel>\r\n                <CFormInput\r\n                  type=\"text\"\r\n                  id=\"gameAmountPerTicketToAgent\"\r\n                  placeholder=\"Game Amount Per Ticket to Agent\"\r\n                  onChange={(e) => {\r\n                    setGameAmountPerTicketToAgent(e)\r\n                  }}\r\n                />\r\n                <CFormSwitch\r\n                  label=\"Game Quick Seven\"\r\n                  id=\"gameQuickFire\"\r\n                  defaultChecked={gameQuickFire}\r\n                  onChange={() => setGameQuickFire(!gameQuickFire)}\r\n                />\r\n                {gameQuickFire && (\r\n                  <CFormInput\r\n                    type=\"text\"\r\n                    id=\"gameQuickSevenPrize\"\r\n                    placeholder=\"Game Quick Seven Prize\"\r\n                    onChange={(e) => {\r\n                      setGameQuickSevenPrize(e)\r\n                    }}\r\n                  />\r\n                )}\r\n                {/* <CFormSwitch\r\n                  label=\"Game Star\"\r\n                  id=\"gameStar\"\r\n                  defaultChecked={gameStar}\r\n                  onChange={() => setGameStar(!gameStar)}\r\n                /> */}\r\n                <CFormSwitch\r\n                  label=\"Game Top Line\"\r\n                  id=\"gameTopLine\"\r\n                  defaultChecked={gameTopLine}\r\n                  onChange={() => setGameTopLine(!gameTopLine)}\r\n                />\r\n                {gameTopLine && (\r\n                  <CFormInput\r\n                    type=\"text\"\r\n                    id=\"gameTopLinePrize\"\r\n                    placeholder=\"Game Top Line Prize\"\r\n                    onChange={(e) => {\r\n                      setGameTopLinePrize(e)\r\n                    }}\r\n                  />\r\n                )}\r\n                <CFormSwitch\r\n                  label=\"Game Middle Line\"\r\n                  id=\"gameMiddleLine\"\r\n                  defaultChecked={gameMiddleLine}\r\n                  onChange={() => setGameMiddleLine(!gameMiddleLine)}\r\n                />\r\n                {gameMiddleLine && (\r\n                  <CFormInput\r\n                    type=\"text\"\r\n                    id=\"gameMiddleLinePrize\"\r\n                    placeholder=\"Game Middle Line Prize\"\r\n                    onChange={(e) => {\r\n                      setGameMiddleLinePrize(e)\r\n                    }}\r\n                  />\r\n                )}\r\n                <CFormSwitch\r\n                  label=\"Game Bottom Line\"\r\n                  id=\"gameBottomLine\"\r\n                  defaultChecked={gameBottomLine}\r\n                  onChange={() => setGameBottomLine(!gameBottomLine)}\r\n                />\r\n                {gameBottomLine && (\r\n                  <CFormInput\r\n                    type=\"text\"\r\n                    id=\"gameBottomLinePrize\"\r\n                    placeholder=\"Game Bottom Line Prize\"\r\n                    onChange={(e) => {\r\n                      setGameBottomLinePrize(e)\r\n                    }}\r\n                  />\r\n                )}\r\n                {/* <CFormSwitch\r\n                  label=\"Game Corner\"\r\n                  id=\"gameCorner\"\r\n                  defaultChecked={gameCorner}\r\n                  onChange={() => setGameCorner(!gameCorner)}\r\n                /> */}\r\n                {/* <CFormSwitch\r\n                  label=\"Game Half Sheet\"\r\n                  id=\"gameHalfSheet\"\r\n                  defaultChecked={gameHalfSheet}\r\n                  onChange={() => setGameHalfSheet(!gameHalfSheet)}\r\n                /> */}\r\n                <CFormSwitch\r\n                  label=\"First Full house\"\r\n                  id=\"gameHousefull\"\r\n                  defaultChecked={gameHousefull}\r\n                  onChange={() => setGameHousefull(!gameHousefull)}\r\n                />\r\n                {gameHousefull && (\r\n                  <CFormInput\r\n                    type=\"text\"\r\n                    id=\"gameHousefullPrize\"\r\n                    placeholder=\"Game Housefull Prize\"\r\n                    onChange={(e) => {\r\n                      setGameHouseFullPrize(e)\r\n                    }}\r\n                  />\r\n                )}\r\n                <CFormSwitch\r\n                  label=\"Second Full house\"\r\n                  id=\"gameSecondHousefull\"\r\n                  defaultChecked={gameSecondHousefull}\r\n                  onChange={() => setGameSecondHousefull(!gameSecondHousefull)}\r\n                />\r\n                {gameSecondHousefull && (\r\n                  <CFormInput\r\n                    type=\"text\"\r\n                    id=\"gameSecondHousefullPrize\"\r\n                    placeholder=\"Game Second Housefull Prize\"\r\n                    onChange={(e) => {\r\n                      setGameSecondHouseFullPrize(e)\r\n                    }}\r\n                  />\r\n                )}\r\n                <CFormLabel htmlFor=\"gameStatus\">Game Statuss</CFormLabel>\r\n                <CFormInput\r\n                  type=\"text\"\r\n                  id=\"gameSecondHousefullPrize\"\r\n                  placeholder=\"Game Second Housefull Prize\"\r\n                  value={'Deactive'}\r\n                  disabled\r\n                />\r\n                {/* <CFormSelect defaultValue={gameStatus} id=\"gameStatus\" onChange={(e) => { setGameStatus(e.target.value) }}>\r\n                  <option value=\"Active\" >Active</option>\r\n                  <option selected disabled>Deactive</option>\r\n                </CFormSelect> */}\r\n              </div>\r\n            </CForm>\r\n          </CModalBody>\r\n          <CModalFooter>\r\n            {/* <CButton color=\"secondary\" onClick={() => setEditModalVisible(false)}>\r\n              Cancel\r\n            </CButton> */}\r\n            <CButton color=\"primary\" onClick={() => save_game()}>\r\n              Save\r\n            </CButton>\r\n          </CModalFooter>\r\n        </CModal>\r\n      </CCol>\r\n      <CCol xs={12}>\r\n        <CCard className=\"mb-4\">\r\n          <CCardBody>\r\n            <CTable hover responsive>\r\n              <CTableHead>\r\n                <CTableRow>\r\n                  <CTableHeaderCell scope=\"col\">#</CTableHeaderCell>\r\n                  <CTableHeaderCell scope=\"col\">Game Name</CTableHeaderCell>\r\n                  <CTableHeaderCell scope=\"col\">Game Start Date</CTableHeaderCell>\r\n                  <CTableHeaderCell scope=\"col\">Game Start Time</CTableHeaderCell>\r\n                  <CTableHeaderCell scope=\"col\">Game Maximum Ticket</CTableHeaderCell>\r\n                  <CTableHeaderCell scope=\"col\">Amount Per Ticket</CTableHeaderCell>\r\n                  <CTableHeaderCell scope=\"col\">Status</CTableHeaderCell>\r\n                  <CTableHeaderCell scope=\"col\">Ticket</CTableHeaderCell>\r\n                  <CTableHeaderCell scope=\"col\">Action</CTableHeaderCell>\r\n                </CTableRow>\r\n              </CTableHead>\r\n              <CTableBody>\r\n                {gameData.map((item, index) => {\r\n                  console.log('gameListttt', item)\r\n                  return (\r\n                    <CTableRow key={index}>\r\n                      <CTableHeaderCell scope=\"row\">{index + 1}</CTableHeaderCell>\r\n                      <CTableDataCell>{item.game_name}</CTableDataCell>\r\n                      <CTableDataCell>{item.game_start_date}</CTableDataCell>\r\n                      <CTableDataCell>{item.game_start_time}</CTableDataCell>\r\n                      <CTableDataCell>{item.game_maximum_ticket_sell}</CTableDataCell>\r\n                      <CTableDataCell>{item.game_amount}</CTableDataCell>\r\n                      <CTableDataCell>{item.game_status}</CTableDataCell>\r\n                      <CTableDataCell>\r\n                        <Link to={`/ticketView/${item.game_id}`}>\r\n                          <CButton color=\"info\" className=\"me-2\">\r\n                            Ticket\r\n                          </CButton>\r\n                        </Link>\r\n                      </CTableDataCell>\r\n                      <CTableDataCell>\r\n                        <CButton\r\n                          color=\"warning\"\r\n                          className=\"me-2\"\r\n                          onClick={() => {\r\n                            setGameStartId(item.game_id)\r\n                            get_edit_value(item)\r\n                          }}\r\n                        >\r\n                          More\r\n                        </CButton>\r\n                        <CModal alignment=\"center\" visible={editModalVisible}>\r\n                          <CModalHeader>\r\n                            <CModalTitle>View</CModalTitle>\r\n                          </CModalHeader>\r\n                          <CModalBody>\r\n                            <CForm>\r\n                              {editOption == false ? (\r\n                                <div className=\"mb-3\">\r\n                                  <CFormLabel htmlFor=\"gameName\">Game Name</CFormLabel>\r\n                                  <CFormInput\r\n                                    type=\"text\"\r\n                                    id=\"gameName\"\r\n                                    placeholder=\"Game Name\"\r\n                                    defaultValue={gameName}\r\n                                    disabled\r\n                                  />\r\n                                  <CFormLabel htmlFor=\"gameStartDate\">Game Start Date</CFormLabel>\r\n                                  <CFormInput\r\n                                    type=\"text\"\r\n                                    id=\"gameStartDate\"\r\n                                    placeholder=\"Game Start Date\"\r\n                                    defaultValue={gameStartDate}\r\n                                    disabled\r\n                                  />\r\n                                  <CFormLabel htmlFor=\"gameStartTime\">Game Start Time</CFormLabel>\r\n                                  <CFormInput\r\n                                    type=\"text\"\r\n                                    id=\"gameStartTime\"\r\n                                    placeholder=\"Game Start Time\"\r\n                                    defaultValue={gameStartTime}\r\n                                    disabled\r\n                                  />\r\n                                  <CFormLabel htmlFor=\"gameMaximumTicketSell\">\r\n                                    Game Maximum Ticket Sell\r\n                                  </CFormLabel>\r\n                                  <CFormInput\r\n                                    type=\"text\"\r\n                                    id=\"gameMaximumTicketSell\"\r\n                                    placeholder=\"Game Maximum Ticket Sell\"\r\n                                    defaultValue={gameMaximumTicketSell}\r\n                                    disabled\r\n                                  />\r\n                                  <CFormLabel htmlFor=\"gameAmount\">Game Amount</CFormLabel>\r\n                                  <CFormInput\r\n                                    type=\"text\"\r\n                                    id=\"gameAmount\"\r\n                                    placeholder=\"Game Amount\"\r\n                                    defaultValue={gameAmount}\r\n                                    disabled\r\n                                  />\r\n                                  <CFormSwitch\r\n                                    label=\"Game Quick Fire\"\r\n                                    id=\"gameQuickFire\"\r\n                                    defaultChecked={gameQuickFire}\r\n                                    onChange={() => setGameQuickFire(!gameQuickFire)}\r\n                                    disabled\r\n                                  />\r\n                                  <CFormSwitch\r\n                                    label=\"Game Star\"\r\n                                    id=\"gameStar\"\r\n                                    defaultChecked={gameStar}\r\n                                    onChange={() => setGameStar(!gameStar)}\r\n                                    disabled\r\n                                  />\r\n                                  <CFormSwitch\r\n                                    label=\"Game Top Line\"\r\n                                    id=\"gameTopLine\"\r\n                                    defaultChecked={gameTopLine}\r\n                                    onChange={() => setGameTopLine(!gameTopLine)}\r\n                                    disabled\r\n                                  />\r\n                                  <CFormSwitch\r\n                                    label=\"Game Middle Line\"\r\n                                    id=\"gameMiddleLine\"\r\n                                    defaultChecked={gameMiddleLine}\r\n                                    onChange={() => setGameMiddleLine(!gameMiddleLine)}\r\n                                    disabled\r\n                                  />\r\n                                  <CFormSwitch\r\n                                    label=\"Game Bottom Line\"\r\n                                    id=\"gameBottomLine\"\r\n                                    defaultChecked={gameBottomLine}\r\n                                    onChange={() => setGameBottomLine(!gameBottomLine)}\r\n                                    disabled\r\n                                  />\r\n                                  <CFormSwitch\r\n                                    label=\"Game Corner\"\r\n                                    id=\"gameCorner\"\r\n                                    defaultChecked={gameCorner}\r\n                                    onChange={() => setGameCorner(!gameCorner)}\r\n                                    disabled\r\n                                  />\r\n                                  <CFormSwitch\r\n                                    label=\"Game Half Sheet\"\r\n                                    id=\"gameHalfSheet\"\r\n                                    defaultChecked={gameHalfSheet}\r\n                                    onChange={() => setGameHalfSheet(!gameHalfSheet)}\r\n                                    disabled\r\n                                  />\r\n                                  <CFormSwitch\r\n                                    label=\"Game Housefull\"\r\n                                    id=\"gameHousefull\"\r\n                                    defaultChecked={gameHousefull}\r\n                                    onChange={() => setGameHousefull(!gameHousefull)}\r\n                                    disabled\r\n                                  />\r\n                                  <CFormLabel htmlFor=\"gameStatus\">Game Status</CFormLabel>\r\n                                  <CFormSelect\r\n                                    defaultValue={gameStatus}\r\n                                    id=\"gameStatus\"\r\n                                    onChange={(e) => {\r\n                                      setGameStatus(e.target.value)\r\n                                    }}\r\n                                  >\r\n                                    <option value=\"\" selected disabled>\r\n                                      Select Status\r\n                                    </option>\r\n                                    <option value=\"Active\">Active</option>\r\n                                    <option value=\"Deactive\">Deactive</option>\r\n                                  </CFormSelect>\r\n                                </div>\r\n                              ) : (\r\n                                <div className=\"mb-3\">\r\n                                  <CFormLabel htmlFor=\"gameName\">Game Name</CFormLabel>\r\n                                  <CFormInput\r\n                                    type=\"text\"\r\n                                    id=\"gameName\"\r\n                                    placeholder=\"Game Name\"\r\n                                    onChange={(e) => {\r\n                                      setGameName(e)\r\n                                    }}\r\n                                    defaultValue={gameName}\r\n                                  />\r\n                                  <CFormLabel htmlFor=\"gameStartDate\">Game Start Date</CFormLabel>\r\n                                  <CFormInput\r\n                                    type=\"text\"\r\n                                    id=\"gameStartDate\"\r\n                                    placeholder=\"Game Start Date\"\r\n                                    onChange={(e) => {\r\n                                      setGameStartDate(e)\r\n                                    }}\r\n                                    defaultValue={gameStartDate}\r\n                                  />\r\n                                  <CFormLabel htmlFor=\"gameStartTime\">Game Start Time</CFormLabel>\r\n                                  <CFormInput\r\n                                    type=\"text\"\r\n                                    id=\"gameStartTime\"\r\n                                    placeholder=\"Game Start Time\"\r\n                                    onChange={(e) => {\r\n                                      setGameStartTime(e)\r\n                                    }}\r\n                                    defaultValue={gameStartTime}\r\n                                  />\r\n                                  <CFormLabel htmlFor=\"gameMaximumTicketSell\">\r\n                                    Game Maximum Ticket Sell\r\n                                  </CFormLabel>\r\n                                  <CFormInput\r\n                                    type=\"text\"\r\n                                    id=\"gameMaximumTicketSell\"\r\n                                    placeholder=\"Game Maximum Ticket Sell\"\r\n                                    onChange={(e) => {\r\n                                      setGameMaximumTicketSell(e)\r\n                                    }}\r\n                                    defaultValue={gameMaximumTicketSell}\r\n                                  />\r\n                                  <CFormLabel htmlFor=\"gameAmount\">Game Amount</CFormLabel>\r\n                                  <CFormInput\r\n                                    type=\"text\"\r\n                                    id=\"gameAmount\"\r\n                                    placeholder=\"Game Amount\"\r\n                                    onChange={(e) => {\r\n                                      setGameAmount(e)\r\n                                    }}\r\n                                    defaultValue={gameAmount}\r\n                                  />\r\n                                  <CFormSwitch\r\n                                    label=\"Game Quick Fire\"\r\n                                    id=\"gameQuickFire\"\r\n                                    defaultChecked={gameQuickFire}\r\n                                    onChange={() => setGameQuickFire(!gameQuickFire)}\r\n                                  />\r\n                                  <CFormSwitch\r\n                                    label=\"Game Star\"\r\n                                    id=\"gameStar\"\r\n                                    defaultChecked={gameStar}\r\n                                    onChange={() => setGameStar(!gameStar)}\r\n                                  />\r\n                                  <CFormSwitch\r\n                                    label=\"Game Top Line\"\r\n                                    id=\"gameTopLine\"\r\n                                    defaultChecked={gameTopLine}\r\n                                    onChange={() => setGameTopLine(!gameTopLine)}\r\n                                  />\r\n                                  <CFormSwitch\r\n                                    label=\"Game Middle Line\"\r\n                                    id=\"gameMiddleLine\"\r\n                                    defaultChecked={gameMiddleLine}\r\n                                    onChange={() => setGameMiddleLine(!gameMiddleLine)}\r\n                                  />\r\n                                  <CFormSwitch\r\n                                    label=\"Game Bottom Line\"\r\n                                    id=\"gameBottomLine\"\r\n                                    defaultChecked={gameBottomLine}\r\n                                    onChange={() => setGameBottomLine(!gameBottomLine)}\r\n                                  />\r\n                                  <CFormSwitch\r\n                                    label=\"Game Corner\"\r\n                                    id=\"gameCorner\"\r\n                                    defaultChecked={gameCorner}\r\n                                    onChange={() => setGameCorner(!gameCorner)}\r\n                                  />\r\n                                  <CFormSwitch\r\n                                    label=\"Game Half Sheet\"\r\n                                    id=\"gameHalfSheet\"\r\n                                    defaultChecked={gameHalfSheet}\r\n                                    onChange={() => setGameHalfSheet(!gameHalfSheet)}\r\n                                  />\r\n                                  <CFormSwitch\r\n                                    label=\"Game Housefull\"\r\n                                    id=\"gameHousefull\"\r\n                                    defaultChecked={gameHousefull}\r\n                                    onChange={() => setGameHousefull(!gameHousefull)}\r\n                                  />\r\n                                  <CFormLabel htmlFor=\"gameStatus\">Game Status</CFormLabel>\r\n                                  <CFormSelect\r\n                                    defaultValue={gameStatus}\r\n                                    id=\"gameStatus\"\r\n                                    onChange={(e) => {\r\n                                      setGameStatus(e.target.value)\r\n                                    }}\r\n                                  >\r\n                                    <option value=\"\" selected disabled>\r\n                                      Select Status\r\n                                    </option>\r\n                                    <option value=\"Active\">Active</option>\r\n                                    <option value=\"Deactive\">Deactive</option>\r\n                                  </CFormSelect>\r\n                                </div>\r\n                              )}\r\n                              <div className=\"d-flex justify-center\">\r\n                                <CButton color=\"primary\" onClick={() => game_start()}>\r\n                                  Start Game\r\n                                </CButton>\r\n                              </div>\r\n                            </CForm>\r\n                          </CModalBody>\r\n                          <CModalFooter>\r\n                            <CButton color=\"secondary\" onClick={() => setEditModalVisible(false)}>\r\n                              Cancel\r\n                            </CButton>\r\n                            {/* <CButton color=\"primary\" onClick={() => edit_game()}>Edit</CButton> */}\r\n                            {editOption == false ? (\r\n                              <>\r\n                                <CButton color=\"primary\" onClick={() => setEditOption(true)}>\r\n                                  Edit\r\n                                </CButton>\r\n                                <CButton\r\n                                  color=\"danger\"\r\n                                  onClick={() => {\r\n                                    setDeleteModalVisible(true)\r\n                                  }}\r\n                                >\r\n                                  Delete\r\n                                </CButton>\r\n                                <CModal\r\n                                  alignment=\"center\"\r\n                                  visible={deleteModalVisible}\r\n                                  onClose={() => setDeleteModalVisible(false)}\r\n                                >\r\n                                  <CModalHeader>\r\n                                    <CModalTitle>Do You Want to Delete..</CModalTitle>\r\n                                  </CModalHeader>\r\n                                  <CModalFooter>\r\n                                    <CButton color=\"secondary\" onClick={() => setVisible(false)}>\r\n                                      Cancel\r\n                                    </CButton>\r\n                                    <CButton\r\n                                      color=\"primary\"\r\n                                      onClick={() => delete_game(item.users_id)}\r\n                                    >\r\n                                      Yes.,Delete\r\n                                    </CButton>\r\n                                  </CModalFooter>\r\n                                </CModal>\r\n                              </>\r\n                            ) : (\r\n                              <CButton color=\"primary\" onClick={() => edit_game()}>\r\n                                Update\r\n                              </CButton>\r\n                            )}\r\n                          </CModalFooter>\r\n                        </CModal>\r\n                      </CTableDataCell>\r\n                      {/* <CTableDataCell>\r\n                      <CButton color=\"warning\" className='me-2' onClick={() => { get_edit_value(item) }}>Edit</CButton>\r\n                      <CModal alignment=\"center\" visible={editModalVisible}>\r\n                        <CModalHeader>\r\n                          <CModalTitle>Edit</CModalTitle>\r\n                        </CModalHeader>\r\n                        <CModalFooter>\r\n                          <CButton color=\"secondary\" onClick={() => setEditModalVisible(false)}>\r\n                            Cancel\r\n                          </CButton>\r\n                          <CButton color=\"primary\" onClick={() => edit_game()}>Update</CButton>\r\n                        </CModalFooter>\r\n                      </CModal>\r\n                      <CButton color=\"danger\" onClick={() => { setDeleteModalVisible(true) }}>Delete</CButton>\r\n                      <CModal alignment=\"center\" visible={deleteModalVisible} onClose={() => setDeleteModalVisible(false)}>\r\n                        <CModalHeader>\r\n                          <CModalTitle>Do You Want to Delete..</CModalTitle>\r\n                        </CModalHeader>\r\n                        <CModalFooter>\r\n                          <CButton color=\"secondary\" onClick={() => setVisible(false)}>\r\n                            Cancel\r\n                          </CButton>\r\n                          <CButton color=\"primary\" onClick={() => delete_game(item.users_id)}>Yes.,Delete</CButton>\r\n                        </CModalFooter>\r\n                      </CModal>\r\n                    </CTableDataCell> */}\r\n                    </CTableRow>\r\n                  )\r\n                })}\r\n              </CTableBody>\r\n            </CTable>\r\n          </CCardBody>\r\n        </CCard>\r\n        {/* <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\r\n          <div\r\n            style={{ margin: 10 }}\r\n            onClick={() => {\r\n              handlePrevFunction()\r\n            }}\r\n          >\r\n            Prev\r\n          </div>\r\n          <div\r\n            style={{ margin: 10 }}\r\n            onClick={() => {\r\n              handleNextFunction()\r\n            }}\r\n          >\r\n            Next\r\n          </div>\r\n        </div> */}\r\n      </CCol>\r\n    </CRow>\r\n  )\r\n}\r\n\r\nexport default Game\r\n","import { Link, useParams } from 'react-router-dom'\r\nimport React, { useEffect, useState } from 'react'\r\nimport {\r\n  CButton,\r\n  CCard,\r\n  CCardBody,\r\n  CCardHeader,\r\n  CCardText,\r\n  CCardTitle,\r\n  CCol,\r\n  CForm,\r\n  CFormCheck,\r\n  CFormInput,\r\n  CFormLabel,\r\n  CFormSwitch,\r\n  CFormTextarea,\r\n  CModal,\r\n  CModalBody,\r\n  CModalFooter,\r\n  CModalHeader,\r\n  CModalTitle,\r\n  CRow,\r\n  CTable,\r\n  CTableBody,\r\n  CTableCaption,\r\n  CTableDataCell,\r\n  CTableHead,\r\n  CTableHeaderCell,\r\n  CTableRow,\r\n} from '@coreui/react'\r\nimport { getApiCall, postApiCall, putApiCall } from 'src/services/AppSetting'\r\nimport { base } from 'src/constants/Data.constant'\r\nimport Toast from 'src/components/toast/Toast'\r\nimport { ToastContainer, toast } from 'react-toastify'\r\nimport 'react-toastify/dist/ReactToastify.css'\r\n\r\nconst TicketView = (props) => {\r\n  const [ticket, setTicket] = useState([])\r\n  useEffect(() => {\r\n    ticketCardView()\r\n  }, [props])\r\n  const { id } = useParams()\r\n  console.log('iidd', id)\r\n  const ticketCardView = async () => {\r\n    let req = {\r\n      gameId: id,\r\n    }\r\n    // let result = await getApiCall(base.ticketCardView)\r\n    let result = await postApiCall(base.ticketCardView, req)\r\n    console.log('resultttweww', result)\r\n    try {\r\n      let convertJSON = JSON.parse(result.data[0].ticket_set)\r\n      console.log('convertJSONnn', convertJSON[0].dateSet)\r\n      setTicket(convertJSON)\r\n    } catch (error) {\r\n      console.log('errorjson', error)\r\n    }\r\n  }\r\n\r\n  const _render_ticket_card_view = (data) => {\r\n    {\r\n      return data?.map((item, index) => {\r\n        console.log('card_view_item', item)\r\n        return (\r\n          <CCol sm={6} style={{ margin: '10px 0' }} key={index}>\r\n            <CCard>\r\n              <CCardBody>\r\n                <div\r\n                  style={{\r\n                    flex: 1,\r\n                    display: 'flex',\r\n                    flexDirection: 'row',\r\n                    justifyContent: 'space-between',\r\n                  }}\r\n                >\r\n                  <div style={{ textAlign: 'center', fontWeight: 'bold' }}>\r\n                    Name: {item.userName != '' ? item.userName : 'Un Sold'}\r\n                  </div>\r\n                  <div style={{ textAlign: 'center', fontWeight: 'bold' }}>\r\n                    Phone Number: {item.userPhone != '' ? item.userPhone : 'N/A'}\r\n                  </div>\r\n                </div>\r\n                <div\r\n                  style={{\r\n                    flex: 1,\r\n                    display: 'flex',\r\n                    flexDirection: 'row',\r\n                    justifyContent: 'space-between',\r\n                  }}\r\n                >\r\n                  <div style={{ textAlign: 'center', fontWeight: 'bold' }}>\r\n                    Agent Name: {item.agentId != '' ? item.agentId : 'Un Sold'}\r\n                  </div>\r\n                  <div style={{ textAlign: 'center', fontWeight: 'bold' }}>\r\n                    Ticket Number: {item.ticketUniquieId != '' ? item.ticketUniquieId : 'N/A'}\r\n                  </div>\r\n                </div>\r\n                <div\r\n                  style={{\r\n                    display: 'flex',\r\n                    justifyContent: 'center',\r\n                  }}\r\n                >\r\n                  <div\r\n                    style={{\r\n                      display: 'flex',\r\n                      flexWrap: 'wrap',\r\n                      flexDirection: 'row',\r\n                      justifyContent: 'center',\r\n                      alignItems: 'center',\r\n                      margin: '10px',\r\n                    }}\r\n                  >\r\n                    {item?.dateSet?.map((innerItem, index) => (\r\n                      <div\r\n                        style={{\r\n                          width: '50px',\r\n                          height: '50px',\r\n                          display: 'flex',\r\n                          justifyContent: 'center',\r\n                          alignItems: 'center',\r\n                          border: '1px solid #ccc',\r\n                          fontWeight: 'bold',\r\n                          // color: innerItem.number == 0 ? '#fff' : '',\r\n                        }}\r\n                        key={index}\r\n                      >\r\n                        {innerItem.number}\r\n                      </div>\r\n                    ))}\r\n                  </div>\r\n                </div>\r\n              </CCardBody>\r\n            </CCard>\r\n          </CCol>\r\n          // <div>test1</div>\r\n        )\r\n      })\r\n    }\r\n  }\r\n\r\n  return (\r\n    <CRow>{_render_ticket_card_view(ticket || [])}</CRow>\r\n    // <div style={{ flex: 1, background: 'red' }}></div>\r\n  )\r\n}\r\n// const Styles = {\r\n//   ticket- container: {\r\n//     display: flex,\r\n//     flex-wrap: wrap,\r\n//       justify : content: center,\r\n//         margin : top: 20px,\r\n// }}\r\n\r\n//   .ticket {\r\n//     display: flex;\r\n//   flex - direction: column;\r\n//   align - items: center;\r\n//   margin: 10px;\r\n//   padding: 10px;\r\n//   border: 1px solid #ccc;\r\n// }\r\n\r\n//   .ticket - cell {\r\n//     width: 40px;\r\n//   height: 40px;\r\n//   display: flex;\r\n//   justify - content: center;\r\n//   align - items: center;\r\n//   border: 1px solid #ccc;\r\n//   margin: 2px;\r\n//   font - weight: bold;\r\n// }}\r\n// </style>\r\n\r\nexport default TicketView\r\n"],"names":["mainUrl","base","adminLogin","saveAgent","agentsList","editAgent","deleteAgent","saveUser","usersList","editUser","deleteUser","ticketCardView","gameList","saveGame","editGame","saveAnnouncement","announcementList","editAnnouncement","deleteAnnouncement","disclaimerList","editDisclaimer","agentDetails","agentPaidAmount","agentTransacationList","walletAction","startGame","postApiCall","async","url","request","token","localStorage","getItem","result","arguments","length","undefined","data","tokenData","header","headers","Authorization","axios","post","opsService","e","status","message","putApiCall","put","getApiCall","get","Game","gameStartId","setGameStartId","useState","deleteModalVisible","setDeleteModalVisible","editModalVisible","setEditModalVisible","editOption","setEditOption","gameData","setGameData","visible","setVisible","gameId","setGameId","id","setId","gameName","setGameName","gameStartDate","setGameStartDate","gameStartTime","setGameStartTime","gameMaximumTicketSell","setGameMaximumTicketSell","gameAmount","setGameAmount","gameAmountPerTicketToAgent","setGameAmountPerTicketToAgent","gameQuickFire","setGameQuickFire","gameQuickSevenPrize","setGameQuickSevenPrize","gameStar","setGameStar","gameTopLine","setGameTopLine","gameTopLinePrize","setGameTopLinePrize","gameMiddleLine","setGameMiddleLine","gameMiddleLinePrize","setGameMiddleLinePrize","gameBottomLine","setGameBottomLine","gameBottomLinePrize","setGameBottomLinePrize","gameCorner","setGameCorner","gameHalfSheet","setGameHalfSheet","gameHousefull","setGameHousefull","gameHouseFullPrize","setGameHouseFullPrize","gameSecondHousefull","setGameSecondHousefull","gameSecondHouseFullPrize","setGameSecondHouseFullPrize","gameStatus","setGameStatus","time","setTime","Date","search","setSearch","prevPage","setPrevPage","nextPage","setNextPage","useEffect","game_list","min","max","successToast","toast","success","position","POSITION","TOP_RIGHT","_jsxs","CRow","children","CCol","xs","className","_jsx","CButton","color","onClick","onClose","ToastContainer","CModal","alignment","CModalHeader","CModalTitle","CModalBody","CForm","CFormLabel","htmlFor","CFormInput","type","placeholder","onChange","maxDate","CFormSwitch","label","defaultChecked","value","disabled","CModalFooter","console","log","target","error","req","code","save_game","CCard","CCardBody","CTable","hover","responsive","CTableHead","CTableRow","CTableHeaderCell","scope","CTableBody","map","item","index","CTableDataCell","game_name","game_start_date","game_start_time","game_maximum_ticket_sell","game_amount","game_status","Link","to","concat","game_id","users_id","game_quick_fire","game_star","game_top_line","game_middle_line","game_bottom_line","game_corner","game_half_sheet","game_housefull","get_edit_value","defaultValue","CFormSelect","selected","game_start","_Fragment","deleteGame","alert","delete_game","edit_game","props","ticket","setTicket","useParams","convertJSON","JSON","parse","ticket_set","dateSet","_item$dateSet","sm","style","margin","flex","display","flexDirection","justifyContent","textAlign","fontWeight","userName","userPhone","agentId","ticketUniquieId","flexWrap","alignItems","innerItem","width","height","border","number"],"sourceRoot":""}