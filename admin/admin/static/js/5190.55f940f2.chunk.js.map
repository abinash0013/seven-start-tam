{"version":3,"file":"static/js/5190.55f940f2.chunk.js","mappings":"qLACA,MAAMA,EAAO,8BAGPC,EAAO,CACXC,WAAYF,EAAO,aACnBG,UAAWH,EAAO,YAClBI,WAAYJ,EAAO,aACnBK,UAAWL,EAAO,YAClBM,YAAaN,EAAO,cACpBO,SAAUP,EAAO,WACjBQ,UAAWR,EAAO,YAClBS,SAAUT,EAAO,WACjBU,WAAYV,EAAO,aAKnBW,eAAgBX,EAAO,iBACvBY,SAAUZ,EAAO,WACjBa,SAAUb,EAAO,WACjBc,SAAUd,EAAO,WACjBe,iBAAkBf,EAAO,mBACzBgB,iBAAkBhB,EAAO,mBACzBiB,iBAAkBjB,EAAO,mBACzBkB,mBAAoBlB,EAAO,qBAC3BmB,eAAgBnB,EAAO,iBACvBoB,eAAgBpB,EAAO,iBACvBqB,aAAcrB,EAAU,eACxBsB,gBAAiBtB,EAAU,kBAC3BuB,sBAAuBvB,EAAU,wBACjCwB,aAAcxB,EAAU,eACxByB,UAAWzB,EAAU,0B,2EC7BvB,MAAM0B,EAAcC,MAAOC,EAAKC,KAC5B,IAAIC,EAAQC,aAAaC,QAAQ,SACjC,IACI,IAAIC,QCJKN,iBAA0C,IAAnCC,EAAGM,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,GAAIG,EAAIH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAAEN,EAAKI,UAAAC,OAAA,QAAAC,IAAAF,UAAA,IAAAA,UAAA,GAErCI,EAAY,GACZR,IACAQ,EAAY,UAAYR,GAE5B,IAAIS,EAAS,CAAEC,QAAS,CAAEC,cAAeH,IAGzC,aAFqBI,EAAAA,EAAMC,KAAKf,EAAKS,EAAME,IAE3BF,IACpB,CDN2BO,CACfhB,EACAC,EACAC,GAGJ,OAAOG,CACX,CAAE,MAAOY,GACL,MAAO,CAAEC,QAAQ,EAAOT,KAAM,CAAC,EAAGU,QAASF,EAAEE,QACjD,GACDC,EAAarB,MAAOC,EAAKC,KACxB,IAAIC,EAAQC,aAAaC,QAAQ,SAEjC,IACI,IAAIC,QCIIN,iBAA0C,IAAnCC,EAAGM,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,GAAIG,EAAIH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAAEN,EAAKI,UAAAC,OAAA,QAAAC,IAAAF,UAAA,IAAAA,UAAA,GAOxC,OANIJ,IACAA,EAAQ,UAAYA,UAEHY,EAAAA,EAAMO,IAAIrB,EAAKS,EAAM,CACtCG,QAAS,CAAEC,cAAeX,MAEdO,IACpB,CDZ2BO,CACfhB,EACAC,EACAC,GAGJ,OAAOG,CACX,CAAE,MAAOY,GACL,MAAO,CAAEC,QAAQ,EAAOT,KAAM,CAAC,EAAGU,QAASF,EAAEE,QACjD,GACDG,EAAavB,UACZ,IACI,IAAIM,QCCIN,iBAAoC,IAA7BC,EAAGM,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,GAAIJ,EAAKI,UAAAC,OAAA,QAAAC,IAAAF,UAAA,IAAAA,UAAA,GAC9BJ,IACAA,EAAQ,UAAYA,GAExB,IAAIS,EAAS,CAAEC,QAAS,CAAEC,cAAeX,IAEzC,aADqBY,EAAAA,EAAMS,IAAIvB,EAAKW,IACpBF,IACpB,CDR2BO,CACfhB,GACA,GAEJ,OAAOK,CACX,CAAE,MAAOY,GACL,MAAO,CAAEC,QAAQ,EAAOT,KAAM,CAAC,EAAGU,QAASF,EAAEE,QACjD,E,8GEvBJ,MA8KA,EA9KgBK,KACd,MAAM,GAAEC,IAAOC,EAAAA,EAAAA,OACRC,EAAeC,IAAoBC,EAAAA,EAAAA,UAAS,KAC5CC,EAAmBC,IAAwBF,EAAAA,EAAAA,UAAS,KACpDG,EAAmBC,IAAwBJ,EAAAA,EAAAA,UAAS,KACpDK,EAAoBC,IAAyBN,EAAAA,EAAAA,UAAS,KACtDO,EAAiBC,IAAsBR,EAAAA,EAAAA,UAAS,KACvDS,EAAAA,EAAAA,YAAU,KACRC,IACAC,GAAyB,GACxB,IAEH,MAAMD,EAAiBxC,UACrB,IACE,IAAI0C,EAAO,CACTC,SAAUjB,GAERpB,QAAeP,EAAAA,EAAAA,IAAYzB,EAAAA,EAAKoB,aAAcgD,GAClDE,QAAQC,IAAI,aAAcvC,GAC1B4B,EAAqB,IACrBL,EAAiBvB,EAAOI,KAAK,GAC/B,CAAE,MAAOQ,GAAI,GAGTuB,EAA0BzC,UAC9B,IACE,IAAI0C,EAAO,CACTI,UAAWpB,GAETpB,QAAeP,EAAAA,EAAAA,IAAYzB,EAAAA,EAAKsB,sBAAuB8C,GAC3DE,QAAQC,IAAI,kCAAmCvC,GAC/C0B,EAAqB1B,EAAOI,KAC9B,CAAE,MAAOQ,GAAI,GAgDT6B,EAAiB/C,UACrBsC,EAAmB,IACnBJ,EAAqB,IACrBE,EAAsB,GAAG,EAG3B,OACEY,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UACEC,EAAAA,EAAAA,MAACC,EAAAA,GAAI,CAACC,UAAU,gBAAeH,SAAA,EAC7BC,EAAAA,EAAAA,MAACG,EAAAA,GAAI,CAACC,GAAI,EAAEL,SAAA,EACVF,EAAAA,EAAAA,KAACQ,EAAAA,GAAW,CAAAN,SAAEtB,EAAc6B,eAC5BT,EAAAA,EAAAA,KAACQ,EAAAA,GAAW,CAAAN,SAAEtB,EAAc8B,gBAC5BV,EAAAA,EAAAA,KAACQ,EAAAA,GAAW,CAAAN,SAAEtB,EAAc+B,oBAE9BX,EAAAA,EAAAA,KAACM,EAAAA,GAAI,CAACC,GAAI,EAAEL,UACVC,EAAAA,EAAAA,MAAA,OAAKE,UAAU,gBAAeH,SAAA,EAC5BF,EAAAA,EAAAA,KAACQ,EAAAA,GAAW,CAAAN,SAAC,uBACbC,EAAAA,EAAAA,MAACK,EAAAA,GAAW,CAAAN,SAAA,CAAC,IAAEtB,EAAcgC,gBAGjCZ,EAAAA,EAAAA,KAACI,EAAAA,GAAI,CAACC,UAAU,aAAYH,UAC1BC,EAAAA,EAAAA,MAACG,EAAAA,GAAI,CAACC,GAAI,GAAGL,SAAA,EACXF,EAAAA,EAAAA,KAACQ,EAAAA,GAAW,CAAAN,SAAC,mBACbF,EAAAA,EAAAA,KAACa,EAAAA,GAAU,CAAAX,UACTC,EAAAA,EAAAA,MAACW,EAAAA,GAAK,CAAAZ,SAAA,EACJF,EAAAA,EAAAA,KAACe,EAAAA,GAAU,CAAAb,SAAC,YACZF,EAAAA,EAAAA,KAACgB,EAAAA,GAAU,CACTC,KAAK,OACLvC,GAAG,SACHwC,YAAY,KACZC,SAAWjD,IACTgB,EAAqBhB,EAAE,EAEzBkD,aAAcnC,KAEhBe,EAAAA,EAAAA,KAACe,EAAAA,GAAU,CAAAb,SAAC,aACZF,EAAAA,EAAAA,KAACgB,EAAAA,GAAU,CACTC,KAAK,OACLvC,GAAG,UACHwC,YAAY,sBACZC,SAAWjD,IACTkB,EAAsBlB,EAAE,EAE1BkD,aAAcjC,KAEhBa,EAAAA,EAAAA,KAACe,EAAAA,GAAU,CAACM,QAAQ,aAAYnB,SAAC,sBACjCC,EAAAA,EAAAA,MAACmB,EAAAA,GAAW,CACVF,aAAc/B,EACdX,GAAG,kBACHyC,SAAWjD,IACToB,EAAmBpB,EAAEqD,OAAOC,MAAM,EAClCtB,SAAA,EAEFF,EAAAA,EAAAA,KAAA,UAAQwB,MAAM,GAAGC,UAAQ,EAACC,UAAQ,EAAAxB,SAAC,6BAGnCF,EAAAA,EAAAA,KAAA,UAAQwB,MAAM,SAAQtB,SAAC,YACvBF,EAAAA,EAAAA,KAAA,UAAQwB,MAAM,QAAOtB,SAAC,cAExBF,EAAAA,EAAAA,KAAC2B,EAAAA,GAAO,CACNC,QAASA,KA3FH5E,WACpB4C,QAAQC,IACN,qBACAZ,EAAkBsC,OAAOC,MAAMhE,OAC/B2B,EAAmBoC,OAAOC,MAAMhE,QASlC,IAAIqE,EAAM,CACRC,QAASpD,EACTW,gBAAiBA,EACjB0C,QAAS5C,EAAmBoC,OAAOC,MACnCQ,OAAQ/C,EAAkBsC,OAAOC,OAEnC5B,QAAQC,IAAI,qBAAsBgC,GAClC,IAAIvE,QAAeP,EAAAA,EAAAA,IAAYzB,EAAAA,EAAKuB,aAAcgF,GAClDjC,QAAQC,IAAI,wBAAyBvC,GAChB,GAAjBA,EAAOa,SACT4B,IACAP,IACAI,QAAQC,IAAI,gCAEd,EAkEgBoC,EAAe,EACf/B,SACH,qBAOS,OAAjBnB,QAAiB,IAAjBA,OAAiB,EAAjBA,EAAmBmD,KAAI,CAACC,EAAMC,KAC7BxC,QAAQC,IAAI,SAAUsC,IAEpBhC,EAAAA,EAAAA,MAACC,EAAAA,GAAI,CAACC,UAAU,cAAaH,SAAA,EAC3BF,EAAAA,EAAAA,KAACQ,EAAAA,GAAW,CAAAN,SAAC,iBACbC,EAAAA,EAAAA,MAACC,EAAAA,GAAI,CAACC,UAAU,cAAaH,SAAA,EAC3BC,EAAAA,EAAAA,MAACG,EAAAA,GAAI,CAACC,GAAI,EAAEL,SAAA,EACVC,EAAAA,EAAAA,MAACK,EAAAA,GAAW,CAAAN,SAAA,CAAC,IAAEiC,EAAKE,eACpBrC,EAAAA,EAAAA,KAACQ,EAAAA,GAAW,CAAAN,SAAEiC,EAAKH,aAErB7B,EAAAA,EAAAA,MAACG,EAAAA,GAAI,CAACC,GAAI,EAAEL,SAAA,EACVF,EAAAA,EAAAA,KAACQ,EAAAA,GAAW,CAAAN,SAAEiC,EAAKG,aACnBtC,EAAAA,EAAAA,KAACQ,EAAAA,GAAW,CAAAN,SAAEiC,EAAKI,iBAErBvC,EAAAA,EAAAA,KAACM,EAAAA,GAAI,CAACC,GAAI,SAXqB6B,UAiBxC,C","sources":["constants/Data.constant.js","services/AppSetting.js","services/Ops.js","views/agents/Profile.js"],"sourcesContent":["// const mainUrl = `http://localhost:8000/`\r\nconst mainUrl = `http://178.16.137.208:8000/`\r\n// const mainUrl = `https://api.sevenstartambola.com/`\r\n// const mainUrl = `http://api.sevenstartambola.com/`\r\nconst base = {\r\n  adminLogin: mainUrl + `adminLogin`,\r\n  saveAgent: mainUrl + `saveAgent`,\r\n  agentsList: mainUrl + `agentsList`,\r\n  editAgent: mainUrl + `editAgent`,\r\n  deleteAgent: mainUrl + `deleteAgent`,\r\n  saveUser: mainUrl + `saveUser`,\r\n  usersList: mainUrl + `usersList`,\r\n  editUser: mainUrl + `editUser`,\r\n  deleteUser: mainUrl + `deleteUser`,\r\n  // saveTicket: mainUrl + `saveTicket`,\r\n  // ticketList: mainUrl + `ticketList`,\r\n  // editTicket: mainUrl + `editTicket`,\r\n  // deleteTicket: mainUrl + `deleteTicket`,\r\n  ticketCardView: mainUrl + `ticketCardView`,\r\n  gameList: mainUrl + `gameList`,\r\n  saveGame: mainUrl + `saveGame`,\r\n  editGame: mainUrl + `editGame`,\r\n  saveAnnouncement: mainUrl + `saveAnnouncement`,\r\n  announcementList: mainUrl + `announcementList`,\r\n  editAnnouncement: mainUrl + `editAnnouncement`,\r\n  deleteAnnouncement: mainUrl + `deleteAnnouncement`,\r\n  disclaimerList: mainUrl + `disclaimerList`,\r\n  editDisclaimer: mainUrl + `editDisclaimer`,\r\n  agentDetails: mainUrl + 'agentDetails',\r\n  agentPaidAmount: mainUrl + 'agentPaidAmount',\r\n  agentTransacationList: mainUrl + 'agentTransacationList',\r\n  walletAction: mainUrl + 'walletAction',\r\n  startGame: mainUrl + 'matchedTicketForBooking',\r\n}\r\nexport { base }\r\n","import { base } from \"src/constants/Data.constant\";\r\nimport * as opsService from \"./Ops\";\r\n\r\nconst postApiCall = async (url, request) => {\r\n    let token = localStorage.getItem(\"token\");\r\n    try {\r\n        let result = await opsService.postData(\r\n            url,\r\n            request,\r\n            token\r\n        );\r\n        // console.log(\"resultPostdata\", result);\r\n        return result;\r\n    } catch (e) {\r\n        return { status: false, data: {}, message: e.message };\r\n    }\r\n}, putApiCall = async (url, request) => {\r\n    let token = localStorage.getItem(\"token\");\r\n\r\n    try {\r\n        let result = await opsService.putData(\r\n            url,\r\n            request,\r\n            token\r\n        );\r\n        // console.log(\"resultPostdata\", result);\r\n        return result;\r\n    } catch (e) {\r\n        return { status: false, data: {}, message: e.message };\r\n    }\r\n}, getApiCall = async (url) => {\r\n    try {\r\n        let result = await opsService.getData(\r\n            url,\r\n            false\r\n        );\r\n        return result;\r\n    } catch (e) {\r\n        return { status: false, data: {}, message: e.message };\r\n    }\r\n};\r\nexport { postApiCall, getApiCall, putApiCall };\r\n","import axios from \"axios\";\r\n\r\nconst postData = async (url = \"\", data, token = false) => {\r\n    // console.log(\"url\",url)\r\n    let tokenData = \"\";\r\n    if (token) {\r\n        tokenData = \"Bearer \" + token;\r\n    }\r\n    var header = { headers: { Authorization: tokenData } };\r\n    let response = await axios.post(url, data, header);\r\n    // let response = await axios.post(url, data, { headers:  { \"Authorization\": tokenData }});\r\n    return response.data;\r\n};\r\nconst postDataContent = async (url = \"\", data, token = false, contentType) => {\r\n    let tokenData = \"\";\r\n    if (token) {\r\n        tokenData = \"Bearer \" + token;\r\n    }\r\n    // console.log('contentType', contentType)\r\n    let response = await axios.post(url, data, {\r\n        headers: { Authorization: tokenData, \"content-type\": contentType },\r\n    });\r\n    return response.data;\r\n};\r\nconst putData = async (url = \"\", data, token = false) => {\r\n    if (token) {\r\n        token = \"Bearer \" + token;\r\n    }\r\n    let response = await axios.put(url, data, {\r\n        headers: { Authorization: token },\r\n    });\r\n    return response.data;\r\n};\r\nconst getData = async (url = \"\", token = false) => {\r\n    if (token) {\r\n        token = \"Bearer \" + token;\r\n    }\r\n    var header = { headers: { Authorization: token } };\r\n    let response = await axios.get(url, header);\r\n    return response.data;\r\n};\r\nconst deleteData = async (url = \"\", token = false) => {\r\n    if (token) {\r\n        token = \"Bearer \" + token;\r\n    }\r\n    let response = await axios.delete(url, {\r\n        headers: { Authorization: token },\r\n    });\r\n    return response.data;\r\n};\r\nexport async function downloadFile(fileUrl, data, token = false) {\r\n    if (token) {\r\n        token = \"Bearer \" + token;\r\n    }\r\n    axios\r\n        .post(fileUrl, data, {\r\n            responseType: \"blob\",\r\n            headers: { Authorization: token },\r\n        })\r\n        .then(function (response) {\r\n            const type = response.headers[\"content-type\"];\r\n            const blob = new Blob([response.data], {\r\n                type: type,\r\n                encoding: \"UTF-8\",\r\n            });\r\n            const link = document.createElement(\"a\");\r\n            link.href = window.URL.createObjectURL(blob);\r\n            link.download = data.fileName;\r\n            link.click();\r\n        });\r\n}\r\n\r\nexport { postData, getData, deleteData, putData, postDataContent };\r\n","import React, { useState, useEffect } from 'react'\r\nimport {\r\n  CRow,\r\n  CCol,\r\n  CForm,\r\n  CButton,\r\n  CFormInput,\r\n  CFormLabel,\r\n  CModalBody,\r\n  CModalTitle,\r\n  CFormSelect,\r\n} from '@coreui/react'\r\nimport { useParams } from 'react-router-dom'\r\nimport { base } from 'src/constants/Data.constant'\r\nimport { postApiCall } from 'src/services/AppSetting'\r\n\r\nconst Profile = () => {\r\n  const { id } = useParams()\r\n  const [agentsDetails, setAgentsDetails] = useState([])\r\n  const [agentsTransaction, setAgentsTransaction] = useState([])\r\n  const [transactionAmount, setTransactionAmount] = useState('')\r\n  const [transactionRemarks, setTransactionRemarks] = useState('')\r\n  const [transactionType, setTransactionType] = useState('')\r\n  useEffect(() => {\r\n    agents_details()\r\n    agents_transection_list()\r\n  }, [])\r\n\r\n  const agents_details = async () => {\r\n    try {\r\n      let body = {\r\n        agent_id: id,\r\n      }\r\n      let result = await postApiCall(base.agentDetails, body)\r\n      console.log('resultttee', result)\r\n      setTransactionAmount('')\r\n      setAgentsDetails(result.data[0])\r\n    } catch (e) {}\r\n  }\r\n\r\n  const agents_transection_list = async () => {\r\n    try {\r\n      let body = {\r\n        agents_id: id,\r\n      }\r\n      let result = await postApiCall(base.agentTransacationList, body)\r\n      console.log('agentTransacationListresulttttt', result)\r\n      setAgentsTransaction(result.data)\r\n    } catch (e) {}\r\n  }\r\n\r\n  const agent_paid_amount = async () => {\r\n    let amount = Number(agentsDetails.wallet) - Number(transactionAmount.target.value)\r\n    let body = {\r\n      agent_id: id,\r\n      amount: amount,\r\n    }\r\n    let result = await postApiCall(base.agentPaidAmount, body)\r\n    if (result.status == true) {\r\n      agents_details()\r\n    } else {\r\n      alert('err')\r\n    }\r\n  }\r\n\r\n  const wallet_action = async () => {\r\n    console.log(\r\n      'wallet_action_log_',\r\n      transactionAmount.target.value.length,\r\n      transactionRemarks.target.value.length\r\n    )\r\n    // if (transactionAmount.target.value.length == 0) {\r\n    //   console.log('Transaction Amount is Mandatory')\r\n    // } else if (transactionRemarks.target.value.length == 0) {\r\n    //   console.log('Transaction Remarks is Mandatory')\r\n    //   // } else if (transactionType == '') {\r\n    //   //   console.log('Transaction Type is Mandatory')\r\n    // } else {\r\n    let req = {\r\n      agentId: id,\r\n      transactionType: transactionType,\r\n      remarks: transactionRemarks.target.value,\r\n      amount: transactionAmount.target.value,\r\n    }\r\n    console.log('walletactionreqlog', req)\r\n    let result = await postApiCall(base.walletAction, req)\r\n    console.log('walletactionresultlog', result)\r\n    if (result.status == true) {\r\n      clearFormInput()\r\n      agents_details()\r\n      console.log('Record Saved Successfully.!!')\r\n      // alert('Record Saved Successfully.!!')\r\n    }\r\n    // }\r\n  }\r\n\r\n  const clearFormInput = async () => {\r\n    setTransactionType('')\r\n    setTransactionAmount('')\r\n    setTransactionRemarks('')\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <CRow className=\"wallent-agent\">\r\n        <CCol xs={6}>\r\n          <CModalTitle>{agentsDetails.agents_name}</CModalTitle>\r\n          <CModalTitle>{agentsDetails.agents_email}</CModalTitle>\r\n          <CModalTitle>{agentsDetails.agents_gender}</CModalTitle>\r\n        </CCol>\r\n        <CCol xs={6}>\r\n          <div className=\"wallet-amount\">\r\n            <CModalTitle>Wallet Balance : </CModalTitle>\r\n            <CModalTitle> {agentsDetails.wallet}</CModalTitle>\r\n          </div>\r\n        </CCol>\r\n        <CRow className=\"send-money\">\r\n          <CCol xs={12}>\r\n            <CModalTitle>Wallet Action</CModalTitle>\r\n            <CModalBody>\r\n              <CForm>\r\n                <CFormLabel>Amount</CFormLabel>\r\n                <CFormInput\r\n                  type=\"text\"\r\n                  id=\"amount\"\r\n                  placeholder=\"00\"\r\n                  onChange={(e) => {\r\n                    setTransactionAmount(e)\r\n                  }}\r\n                  defaultValue={transactionAmount}\r\n                />\r\n                <CFormLabel>Remarks</CFormLabel>\r\n                <CFormInput\r\n                  type=\"text\"\r\n                  id=\"remarks\"\r\n                  placeholder=\"Transaction Remarks\"\r\n                  onChange={(e) => {\r\n                    setTransactionRemarks(e)\r\n                  }}\r\n                  defaultValue={transactionRemarks}\r\n                />\r\n                <CFormLabel htmlFor=\"gameStatus\">Transaction Type</CFormLabel>\r\n                <CFormSelect\r\n                  defaultValue={transactionType}\r\n                  id=\"transactionType\"\r\n                  onChange={(e) => {\r\n                    setTransactionType(e.target.value)\r\n                  }}\r\n                >\r\n                  <option value=\"\" selected disabled>\r\n                    Select Transaction Type\r\n                  </option>\r\n                  <option value=\"Credit\">Credit</option>\r\n                  <option value=\"Debit\">Debit</option>\r\n                </CFormSelect>\r\n                <CButton\r\n                  onClick={() => {\r\n                    // agent_paid_amount()\r\n                    wallet_action()\r\n                  }}\r\n                >\r\n                  Submit\r\n                </CButton>\r\n              </CForm>\r\n            </CModalBody>\r\n          </CCol>\r\n        </CRow>\r\n        {agentsTransaction?.map((item, index) => {\r\n          console.log('itemmm', item)\r\n          return (\r\n            <CRow className=\"transection\" key={index}>\r\n              <CModalTitle>Transaction</CModalTitle>\r\n              <CRow className=\"trans-inner\">\r\n                <CCol xs={6}>\r\n                  <CModalTitle>#{item.payment_id}</CModalTitle>\r\n                  <CModalTitle>{item.amount}</CModalTitle>\r\n                </CCol>\r\n                <CCol xs={6}>\r\n                  <CModalTitle>{item.create_at}</CModalTitle>\r\n                  <CModalTitle>{item.type_cr_dr}</CModalTitle>\r\n                </CCol>\r\n                <CCol xs={6}></CCol>\r\n              </CRow>\r\n            </CRow>\r\n          )\r\n        })}\r\n      </CRow>\r\n    </>\r\n  )\r\n}\r\nexport default Profile\r\n"],"names":["mainUrl","base","adminLogin","saveAgent","agentsList","editAgent","deleteAgent","saveUser","usersList","editUser","deleteUser","ticketCardView","gameList","saveGame","editGame","saveAnnouncement","announcementList","editAnnouncement","deleteAnnouncement","disclaimerList","editDisclaimer","agentDetails","agentPaidAmount","agentTransacationList","walletAction","startGame","postApiCall","async","url","request","token","localStorage","getItem","result","arguments","length","undefined","data","tokenData","header","headers","Authorization","axios","post","opsService","e","status","message","putApiCall","put","getApiCall","get","Profile","id","useParams","agentsDetails","setAgentsDetails","useState","agentsTransaction","setAgentsTransaction","transactionAmount","setTransactionAmount","transactionRemarks","setTransactionRemarks","transactionType","setTransactionType","useEffect","agents_details","agents_transection_list","body","agent_id","console","log","agents_id","clearFormInput","_jsx","_Fragment","children","_jsxs","CRow","className","CCol","xs","CModalTitle","agents_name","agents_email","agents_gender","wallet","CModalBody","CForm","CFormLabel","CFormInput","type","placeholder","onChange","defaultValue","htmlFor","CFormSelect","target","value","selected","disabled","CButton","onClick","req","agentId","remarks","amount","wallet_action","map","item","index","payment_id","create_at","type_cr_dr"],"sourceRoot":""}