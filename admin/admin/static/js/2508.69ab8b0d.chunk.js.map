{"version":3,"file":"static/js/2508.69ab8b0d.chunk.js","mappings":"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","sources":["constants/Data.constant.js","services/AppSetting.js","services/Ops.js","views/pages/login/Login.js","../node_modules/@coreui/icons/src/free/cil-lock-locked.ts","../node_modules/@coreui/icons/src/free/cil-user.ts"],"sourcesContent":["// const mainUrl = `http://localhost:8000/`\r\nconst mainUrl = `http://178.16.137.208:8000/`\r\n// const mainUrl = `https://api.sevenstartambola.com/`\r\n// const mainUrl = `http://api.sevenstartambola.com/`\r\nconst base = {\r\n  adminLogin: mainUrl + `adminLogin`,\r\n  saveAgent: mainUrl + `saveAgent`,\r\n  agentsList: mainUrl + `agentsList`,\r\n  editAgent: mainUrl + `editAgent`,\r\n  deleteAgent: mainUrl + `deleteAgent`,\r\n  saveUser: mainUrl + `saveUser`,\r\n  usersList: mainUrl + `usersList`,\r\n  editUser: mainUrl + `editUser`,\r\n  deleteUser: mainUrl + `deleteUser`,\r\n  // saveTicket: mainUrl + `saveTicket`,\r\n  // ticketList: mainUrl + `ticketList`,\r\n  // editTicket: mainUrl + `editTicket`,\r\n  // deleteTicket: mainUrl + `deleteTicket`,\r\n  ticketCardView: mainUrl + `ticketCardView`,\r\n  gameList: mainUrl + `gameList`,\r\n  saveGame: mainUrl + `saveGame`,\r\n  editGame: mainUrl + `editGame`,\r\n  saveAnnouncement: mainUrl + `saveAnnouncement`,\r\n  announcementList: mainUrl + `announcementList`,\r\n  editAnnouncement: mainUrl + `editAnnouncement`,\r\n  deleteAnnouncement: mainUrl + `deleteAnnouncement`,\r\n  disclaimerList: mainUrl + `disclaimerList`,\r\n  editDisclaimer: mainUrl + `editDisclaimer`,\r\n  agentDetails: mainUrl + 'agentDetails',\r\n  agentPaidAmount: mainUrl + 'agentPaidAmount',\r\n  agentTransacationList: mainUrl + 'agentTransacationList',\r\n  walletAction: mainUrl + 'walletAction',\r\n  startGame: mainUrl + 'matchedTicketForBooking',\r\n}\r\nexport { base }\r\n","import { base } from \"src/constants/Data.constant\";\r\nimport * as opsService from \"./Ops\";\r\n\r\nconst postApiCall = async (url, request) => {\r\n    let token = localStorage.getItem(\"token\");\r\n    try {\r\n        let result = await opsService.postData(\r\n            url,\r\n            request,\r\n            token\r\n        );\r\n        // console.log(\"resultPostdata\", result);\r\n        return result;\r\n    } catch (e) {\r\n        return { status: false, data: {}, message: e.message };\r\n    }\r\n}, putApiCall = async (url, request) => {\r\n    let token = localStorage.getItem(\"token\");\r\n\r\n    try {\r\n        let result = await opsService.putData(\r\n            url,\r\n            request,\r\n            token\r\n        );\r\n        // console.log(\"resultPostdata\", result);\r\n        return result;\r\n    } catch (e) {\r\n        return { status: false, data: {}, message: e.message };\r\n    }\r\n}, getApiCall = async (url) => {\r\n    try {\r\n        let result = await opsService.getData(\r\n            url,\r\n            false\r\n        );\r\n        return result;\r\n    } catch (e) {\r\n        return { status: false, data: {}, message: e.message };\r\n    }\r\n};\r\nexport { postApiCall, getApiCall, putApiCall };\r\n","import axios from \"axios\";\r\n\r\nconst postData = async (url = \"\", data, token = false) => {\r\n    // console.log(\"url\",url)\r\n    let tokenData = \"\";\r\n    if (token) {\r\n        tokenData = \"Bearer \" + token;\r\n    }\r\n    var header = { headers: { Authorization: tokenData } };\r\n    let response = await axios.post(url, data, header);\r\n    // let response = await axios.post(url, data, { headers:  { \"Authorization\": tokenData }});\r\n    return response.data;\r\n};\r\nconst postDataContent = async (url = \"\", data, token = false, contentType) => {\r\n    let tokenData = \"\";\r\n    if (token) {\r\n        tokenData = \"Bearer \" + token;\r\n    }\r\n    // console.log('contentType', contentType)\r\n    let response = await axios.post(url, data, {\r\n        headers: { Authorization: tokenData, \"content-type\": contentType },\r\n    });\r\n    return response.data;\r\n};\r\nconst putData = async (url = \"\", data, token = false) => {\r\n    if (token) {\r\n        token = \"Bearer \" + token;\r\n    }\r\n    let response = await axios.put(url, data, {\r\n        headers: { Authorization: token },\r\n    });\r\n    return response.data;\r\n};\r\nconst getData = async (url = \"\", token = false) => {\r\n    if (token) {\r\n        token = \"Bearer \" + token;\r\n    }\r\n    var header = { headers: { Authorization: token } };\r\n    let response = await axios.get(url, header);\r\n    return response.data;\r\n};\r\nconst deleteData = async (url = \"\", token = false) => {\r\n    if (token) {\r\n        token = \"Bearer \" + token;\r\n    }\r\n    let response = await axios.delete(url, {\r\n        headers: { Authorization: token },\r\n    });\r\n    return response.data;\r\n};\r\nexport async function downloadFile(fileUrl, data, token = false) {\r\n    if (token) {\r\n        token = \"Bearer \" + token;\r\n    }\r\n    axios\r\n        .post(fileUrl, data, {\r\n            responseType: \"blob\",\r\n            headers: { Authorization: token },\r\n        })\r\n        .then(function (response) {\r\n            const type = response.headers[\"content-type\"];\r\n            const blob = new Blob([response.data], {\r\n                type: type,\r\n                encoding: \"UTF-8\",\r\n            });\r\n            const link = document.createElement(\"a\");\r\n            link.href = window.URL.createObjectURL(blob);\r\n            link.download = data.fileName;\r\n            link.click();\r\n        });\r\n}\r\n\r\nexport { postData, getData, deleteData, putData, postDataContent };\r\n","import React, { useState } from 'react'\nimport { Link, redirect, useNavigate } from 'react-router-dom'\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CCardGroup,\n  CCol,\n  CContainer,\n  CForm,\n  CFormInput,\n  CInputGroup,\n  CInputGroupText,\n  CRow,\n} from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\nimport { cilLockLocked, cilUser } from '@coreui/icons'\nimport { postApiCall } from 'src/services/AppSetting'\nimport { base } from 'src/constants/Data.constant'\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst Login = () => {\n  const navigate = useNavigate();\n  const [userName, setUserName] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const submitLogin = async () => {\n    if (userName == \"\") {\n      toast.error(\"username is mandatory\")\n      console.log(\"first\")\n      alert(\"username is mandatory\")\n    } else if (password == \"\") {\n      toast.error(\"password is mandatory\")\n      console.log(\"second\")\n    } else {\n      console.log(\"object\");\n      let req = {\n        username: userName.target.value,\n        password: password.target.value\n      }\n      console.log(\"first\", req)\n      let result = await postApiCall(base.adminLogin, req)\n      console.log(\"logoflogin\", result);\n      if (result.status == true) {\n        toast.error(\"Login successfully\")\n        let test = await localStorage.setItem(\"adminLoginId\", result.data[0].admin_id);\n        // let test = await localStorage.setItem(\"loginId\", \"1\");\n        console.log(\"testeee\", test);\n        navigate(\"/dashboard\");\n      } else {\n        toast.error(\"Login failed\")\n      }\n    }\n  }\n\n  return (\n    <div className=\"bg-light min-vh-100 d-flex flex-row align-items-center\">\n      <CContainer>\n        <ToastContainer />\n        <CRow className=\"justify-content-center\">\n          <CCol md={4}>\n            <CCardGroup>\n              <CCard className=\"p-4\">\n                <CCardBody>\n                  <CForm>\n                    <h1>Admin Login</h1>\n                    <p className=\"text-medium-emphasis\">Login to access your Dashboard</p>\n                    <CInputGroup className=\"mb-3\">\n                      <CInputGroupText>\n                        <CIcon icon={cilUser} />\n                      </CInputGroupText>\n                      <CFormInput placeholder=\"Username\" autoComplete=\"userName\" id=\"userName\" onChange={(e) => { setUserName(e) }} />\n                    </CInputGroup>\n                    <CInputGroup className=\"mb-4\">\n                      <CInputGroupText>\n                        <CIcon icon={cilLockLocked} />\n                      </CInputGroupText>\n                      <CFormInput\n                        type=\"password\"\n                        placeholder=\"Password\"\n                        id=\"password\"\n                        autoComplete=\"current-password\"\n                        onChange={(e) => { setPassword(e) }}\n                      />\n                    </CInputGroup>\n                    <CRow>\n                      <CCol xs={6}>\n                        <CButton color=\"primary\" className=\"px-4\" onClick={() => submitLogin()}>\n                          Loginn\n                        </CButton>\n                      </CCol>\n                      {/* <CCol xs={6} className=\"text-right\"> */}\n                      {/* <CButton color=\"link\" className=\"px-0\">\n                          Forgot password?\n                        </CButton> */}\n                      {/* <CButton color=\"link\" className=\"px-0\" to=\"/register\">\n                          Register Now!\n                        </CButton>\n                      </CCol> */}\n                    </CRow>\n                  </CForm>\n                </CCardBody>\n              </CCard>\n              {/* <CCard className=\"text-white bg-primary py-5\" style={{ width: '44%' }}>\n                <CCardBody className=\"text-center\">\n                  <div>\n                    <h2>Sign up</h2>\n                    <p>\n                      Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod\n                      tempor incididunt ut labore et dolore magna aliqua.\n                    </p>\n                    <Link to=\"/register\">\n                      <CButton color=\"primary\" className=\"mt-3\" active tabIndex={-1}>\n                        Register Now!\n                      </CButton>\n                    </Link>\n                  </div>\n                </CCardBody>\n              </CCard> */}\n            </CCardGroup>\n          </CCol>\n        </CRow>\n      </CContainer>\n    </div>\n  )\n}\n\nexport default Login\n","export var cilLockLocked = [\"512 512\", \"<path fill='var(--ci-primary-color, currentColor)' d='M384,200V144a128,128,0,0,0-256,0v56H88V328c0,92.635,75.364,168,168,168s168-75.365,168-168V200ZM160,144a96,96,0,0,1,192,0v56H160ZM392,328c0,74.99-61.01,136-136,136s-136-61.01-136-136V232H392Z' class='ci-primary'/>\"];\n","export var cilUser = [\"512 512\", \"<path fill='var(--ci-primary-color, currentColor)' d='M411.6,343.656l-72.823-47.334,27.455-50.334A80.23,80.23,0,0,0,376,207.681V128a112,112,0,0,0-224,0v79.681a80.236,80.236,0,0,0,9.768,38.308l27.455,50.333L116.4,343.656A79.725,79.725,0,0,0,80,410.732V496H448V410.732A79.727,79.727,0,0,0,411.6,343.656ZM416,464H112V410.732a47.836,47.836,0,0,1,21.841-40.246l97.66-63.479-41.64-76.341A48.146,48.146,0,0,1,184,207.681V128a80,80,0,0,1,160,0v79.681a48.146,48.146,0,0,1-5.861,22.985L296.5,307.007l97.662,63.479h0A47.836,47.836,0,0,1,416,410.732Z' class='ci-primary'/>\"];\n"],"names":["mainUrl","base","adminLogin","saveAgent","agentsList","editAgent","deleteAgent","saveUser","usersList","editUser","deleteUser","ticketCardView","gameList","saveGame","editGame","saveAnnouncement","announcementList","editAnnouncement","deleteAnnouncement","disclaimerList","editDisclaimer","agentDetails","agentPaidAmount","agentTransacationList","walletAction","startGame","postApiCall","async","url","request","token","localStorage","getItem","result","arguments","length","undefined","data","tokenData","header","headers","Authorization","axios","post","opsService","e","status","message","putApiCall","put","getApiCall","get","Login","navigate","useNavigate","userName","setUserName","useState","password","setPassword","_jsx","className","children","_jsxs","CContainer","ToastContainer","CRow","CCol","md","CCardGroup","CCard","CCardBody","CForm","CInputGroup","CInputGroupText","CIcon","icon","cilUser","CFormInput","placeholder","autoComplete","id","onChange","cilLockLocked","type","xs","CButton","color","onClick","toast","error","console","log","alert","req","username","target","value","test","setItem","admin_id","submitLogin"],"sourceRoot":""}