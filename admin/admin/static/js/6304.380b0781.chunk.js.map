{"version":3,"file":"static/js/6304.380b0781.chunk.js","mappings":"mOACA,MAAMA,EAAO,8BAGPC,EAAO,CACXC,WAAYF,EAAO,aACnBG,UAAWH,EAAO,YAClBI,WAAYJ,EAAO,aACnBK,UAAWL,EAAO,YAClBM,YAAaN,EAAO,cACpBO,SAAUP,EAAO,WACjBQ,UAAWR,EAAO,YAClBS,SAAUT,EAAO,WACjBU,WAAYV,EAAO,aAKnBW,eAAgBX,EAAO,iBACvBY,SAAUZ,EAAO,WACjBa,SAAUb,EAAO,WACjBc,SAAUd,EAAO,WACjBe,iBAAkBf,EAAO,mBACzBgB,iBAAkBhB,EAAO,mBACzBiB,iBAAkBjB,EAAO,mBACzBkB,mBAAoBlB,EAAO,qBAC3BmB,eAAgBnB,EAAO,iBACvBoB,eAAgBpB,EAAO,iBACvBqB,aAAcrB,EAAU,eACxBsB,gBAAiBtB,EAAU,kBAC3BuB,sBAAuBvB,EAAU,wBACjCwB,aAAcxB,EAAU,eACxByB,UAAWzB,EAAU,0B,2EC7BvB,MAAM0B,EAAcC,MAAOC,EAAKC,KAC5B,IAAIC,EAAQC,aAAaC,QAAQ,SACjC,IACI,IAAIC,QCJKN,iBAA0C,IAAnCC,EAAGM,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,GAAIG,EAAIH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAAEN,EAAKI,UAAAC,OAAA,QAAAC,IAAAF,UAAA,IAAAA,UAAA,GAErCI,EAAY,GACZR,IACAQ,EAAY,UAAYR,GAE5B,IAAIS,EAAS,CAAEC,QAAS,CAAEC,cAAeH,IAGzC,aAFqBI,EAAAA,EAAMC,KAAKf,EAAKS,EAAME,IAE3BF,IACpB,CDN2BO,CACfhB,EACAC,EACAC,GAGJ,OAAOG,CACX,CAAE,MAAOY,GACL,MAAO,CAAEC,QAAQ,EAAOT,KAAM,CAAC,EAAGU,QAASF,EAAEE,QACjD,GACDC,EAAarB,MAAOC,EAAKC,KACxB,IAAIC,EAAQC,aAAaC,QAAQ,SAEjC,IACI,IAAIC,QCIIN,iBAA0C,IAAnCC,EAAGM,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,GAAIG,EAAIH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAAEN,EAAKI,UAAAC,OAAA,QAAAC,IAAAF,UAAA,IAAAA,UAAA,GAOxC,OANIJ,IACAA,EAAQ,UAAYA,UAEHY,EAAAA,EAAMO,IAAIrB,EAAKS,EAAM,CACtCG,QAAS,CAAEC,cAAeX,MAEdO,IACpB,CDZ2BO,CACfhB,EACAC,EACAC,GAGJ,OAAOG,CACX,CAAE,MAAOY,GACL,MAAO,CAAEC,QAAQ,EAAOT,KAAM,CAAC,EAAGU,QAASF,EAAEE,QACjD,GACDG,EAAavB,UACZ,IACI,IAAIM,QCCIN,iBAAoC,IAA7BC,EAAGM,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,GAAIJ,EAAKI,UAAAC,OAAA,QAAAC,IAAAF,UAAA,IAAAA,UAAA,GAC9BJ,IACAA,EAAQ,UAAYA,GAExB,IAAIS,EAAS,CAAEC,QAAS,CAAEC,cAAeX,IAEzC,aADqBY,EAAAA,EAAMS,IAAIvB,EAAKW,IACpBF,IACpB,CDR2BO,CACfhB,GACA,GAEJ,OAAOK,CACX,CAAE,MAAOY,GACL,MAAO,CAAEC,QAAQ,EAAOT,KAAM,CAAC,EAAGU,QAASF,EAAEE,QACjD,E,sIEHJ,MA2IA,EA3IoBK,IAClB,MAAOC,EAAQC,IAAaC,EAAAA,EAAAA,UAAS,KACrCC,EAAAA,EAAAA,YAAU,KACR7C,GAAgB,GACf,CAACyC,IACJ,MAAM,GAAEK,IAAOC,EAAAA,EAAAA,MACfC,QAAQC,IAAI,OAAQH,GACpB,MAAM9C,EAAiBgB,UACrB,IAAIkC,EAAM,CACRC,OAAQL,GAGNxB,QAAeP,EAAAA,EAAAA,IAAYzB,EAAAA,EAAKU,eAAgBkD,GACpDF,QAAQC,IAAI,eAAgB3B,GAC5B,IACE,IAAI8B,EAAcC,KAAKC,MAAMhC,EAAOI,KAAK,GAAG6B,YAC5CP,QAAQC,IAAI,gBAAiBG,EAAY,GAAGI,SAC5Cb,EAAUS,EACZ,CAAE,MAAOK,GACPT,QAAQC,IAAI,YAAaQ,EAC3B,GAqFF,OACEC,EAAAA,EAAAA,KAACC,EAAAA,GAAI,CAAAC,UAnF2BlC,EAmFAgB,GAAU,GAjF7B,OAAJhB,QAAI,IAAJA,OAAI,EAAJA,EAAMmC,KAAI,CAACC,EAAMC,KAAW,IAADC,EAEhC,OADAhB,QAAQC,IAAI,iBAAkBa,IAE5BJ,EAAAA,EAAAA,KAACO,EAAAA,GAAI,CAACC,GAAI,EAAGC,MAAO,CAAEC,OAAQ,UAAWR,UACvCF,EAAAA,EAAAA,KAACW,EAAAA,GAAK,CAAAT,UACJU,EAAAA,EAAAA,MAACC,EAAAA,GAAS,CAAAX,SAAA,EACRU,EAAAA,EAAAA,MAAA,OACEH,MAAO,CACLK,KAAM,EACNC,QAAS,OACTC,cAAe,MACfC,eAAgB,iBAChBf,SAAA,EAEFU,EAAAA,EAAAA,MAAA,OAAKH,MAAO,CAAES,UAAW,SAAUC,WAAY,QAASjB,SAAA,CAAC,SAC/B,IAAjBE,EAAKgB,SAAiBhB,EAAKgB,SAAW,cAE/CR,EAAAA,EAAAA,MAAA,OAAKH,MAAO,CAAES,UAAW,SAAUC,WAAY,QAASjB,SAAA,CAAC,iBACtB,IAAlBE,EAAKiB,UAAkBjB,EAAKiB,UAAY,aAG3DT,EAAAA,EAAAA,MAAA,OACEH,MAAO,CACLK,KAAM,EACNC,QAAS,OACTC,cAAe,MACfC,eAAgB,iBAChBf,SAAA,EAEFU,EAAAA,EAAAA,MAAA,OAAKH,MAAO,CAAES,UAAW,SAAUC,WAAY,QAASjB,SAAA,CAAC,eAC1B,IAAhBE,EAAKkB,QAAgBlB,EAAKkB,QAAU,cAEnDV,EAAAA,EAAAA,MAAA,OAAKH,MAAO,CAAES,UAAW,SAAUC,WAAY,QAASjB,SAAA,CAAC,kBACf,IAAxBE,EAAKmB,gBAAwBnB,EAAKmB,gBAAkB,aAGxEvB,EAAAA,EAAAA,KAAA,OACES,MAAO,CACLM,QAAS,OACTE,eAAgB,UAChBf,UAEFF,EAAAA,EAAAA,KAAA,OACES,MAAO,CACLM,QAAS,OACTS,SAAU,OACVR,cAAe,MACfC,eAAgB,SAChBQ,WAAY,SACZf,OAAQ,QACRR,SAEG,OAAJE,QAAI,IAAJA,GAAa,QAATE,EAAJF,EAAMN,eAAO,IAAAQ,OAAT,EAAJA,EAAeH,KAAI,CAACuB,EAAWrB,KAC9BL,EAAAA,EAAAA,KAAA,OACES,MAAO,CACLkB,MAAO,OACPC,OAAQ,OACRb,QAAS,OACTE,eAAgB,SAChBQ,WAAY,SACZI,OAAQ,iBACRV,WAAY,QAEZjB,SAGDwB,EAAUI,QAFNzB,eA7D4BA,EAuE/C,OA5E0BrC,KAoFhC,C","sources":["constants/Data.constant.js","services/AppSetting.js","services/Ops.js","views/game/TicketView.js"],"sourcesContent":["// const mainUrl = `http://localhost:8000/`\r\nconst mainUrl = `http://178.16.137.208:8000/`\r\n// const mainUrl = `https://api.sevenstartambola.com/`\r\n// const mainUrl = `http://api.sevenstartambola.com/`\r\nconst base = {\r\n  adminLogin: mainUrl + `adminLogin`,\r\n  saveAgent: mainUrl + `saveAgent`,\r\n  agentsList: mainUrl + `agentsList`,\r\n  editAgent: mainUrl + `editAgent`,\r\n  deleteAgent: mainUrl + `deleteAgent`,\r\n  saveUser: mainUrl + `saveUser`,\r\n  usersList: mainUrl + `usersList`,\r\n  editUser: mainUrl + `editUser`,\r\n  deleteUser: mainUrl + `deleteUser`,\r\n  // saveTicket: mainUrl + `saveTicket`,\r\n  // ticketList: mainUrl + `ticketList`,\r\n  // editTicket: mainUrl + `editTicket`,\r\n  // deleteTicket: mainUrl + `deleteTicket`,\r\n  ticketCardView: mainUrl + `ticketCardView`,\r\n  gameList: mainUrl + `gameList`,\r\n  saveGame: mainUrl + `saveGame`,\r\n  editGame: mainUrl + `editGame`,\r\n  saveAnnouncement: mainUrl + `saveAnnouncement`,\r\n  announcementList: mainUrl + `announcementList`,\r\n  editAnnouncement: mainUrl + `editAnnouncement`,\r\n  deleteAnnouncement: mainUrl + `deleteAnnouncement`,\r\n  disclaimerList: mainUrl + `disclaimerList`,\r\n  editDisclaimer: mainUrl + `editDisclaimer`,\r\n  agentDetails: mainUrl + 'agentDetails',\r\n  agentPaidAmount: mainUrl + 'agentPaidAmount',\r\n  agentTransacationList: mainUrl + 'agentTransacationList',\r\n  walletAction: mainUrl + 'walletAction',\r\n  startGame: mainUrl + 'matchedTicketForBooking',\r\n}\r\nexport { base }\r\n","import { base } from \"src/constants/Data.constant\";\r\nimport * as opsService from \"./Ops\";\r\n\r\nconst postApiCall = async (url, request) => {\r\n    let token = localStorage.getItem(\"token\");\r\n    try {\r\n        let result = await opsService.postData(\r\n            url,\r\n            request,\r\n            token\r\n        );\r\n        // console.log(\"resultPostdata\", result);\r\n        return result;\r\n    } catch (e) {\r\n        return { status: false, data: {}, message: e.message };\r\n    }\r\n}, putApiCall = async (url, request) => {\r\n    let token = localStorage.getItem(\"token\");\r\n\r\n    try {\r\n        let result = await opsService.putData(\r\n            url,\r\n            request,\r\n            token\r\n        );\r\n        // console.log(\"resultPostdata\", result);\r\n        return result;\r\n    } catch (e) {\r\n        return { status: false, data: {}, message: e.message };\r\n    }\r\n}, getApiCall = async (url) => {\r\n    try {\r\n        let result = await opsService.getData(\r\n            url,\r\n            false\r\n        );\r\n        return result;\r\n    } catch (e) {\r\n        return { status: false, data: {}, message: e.message };\r\n    }\r\n};\r\nexport { postApiCall, getApiCall, putApiCall };\r\n","import axios from \"axios\";\r\n\r\nconst postData = async (url = \"\", data, token = false) => {\r\n    // console.log(\"url\",url)\r\n    let tokenData = \"\";\r\n    if (token) {\r\n        tokenData = \"Bearer \" + token;\r\n    }\r\n    var header = { headers: { Authorization: tokenData } };\r\n    let response = await axios.post(url, data, header);\r\n    // let response = await axios.post(url, data, { headers:  { \"Authorization\": tokenData }});\r\n    return response.data;\r\n};\r\nconst postDataContent = async (url = \"\", data, token = false, contentType) => {\r\n    let tokenData = \"\";\r\n    if (token) {\r\n        tokenData = \"Bearer \" + token;\r\n    }\r\n    // console.log('contentType', contentType)\r\n    let response = await axios.post(url, data, {\r\n        headers: { Authorization: tokenData, \"content-type\": contentType },\r\n    });\r\n    return response.data;\r\n};\r\nconst putData = async (url = \"\", data, token = false) => {\r\n    if (token) {\r\n        token = \"Bearer \" + token;\r\n    }\r\n    let response = await axios.put(url, data, {\r\n        headers: { Authorization: token },\r\n    });\r\n    return response.data;\r\n};\r\nconst getData = async (url = \"\", token = false) => {\r\n    if (token) {\r\n        token = \"Bearer \" + token;\r\n    }\r\n    var header = { headers: { Authorization: token } };\r\n    let response = await axios.get(url, header);\r\n    return response.data;\r\n};\r\nconst deleteData = async (url = \"\", token = false) => {\r\n    if (token) {\r\n        token = \"Bearer \" + token;\r\n    }\r\n    let response = await axios.delete(url, {\r\n        headers: { Authorization: token },\r\n    });\r\n    return response.data;\r\n};\r\nexport async function downloadFile(fileUrl, data, token = false) {\r\n    if (token) {\r\n        token = \"Bearer \" + token;\r\n    }\r\n    axios\r\n        .post(fileUrl, data, {\r\n            responseType: \"blob\",\r\n            headers: { Authorization: token },\r\n        })\r\n        .then(function (response) {\r\n            const type = response.headers[\"content-type\"];\r\n            const blob = new Blob([response.data], {\r\n                type: type,\r\n                encoding: \"UTF-8\",\r\n            });\r\n            const link = document.createElement(\"a\");\r\n            link.href = window.URL.createObjectURL(blob);\r\n            link.download = data.fileName;\r\n            link.click();\r\n        });\r\n}\r\n\r\nexport { postData, getData, deleteData, putData, postDataContent };\r\n","import { Link, useParams } from 'react-router-dom'\r\nimport React, { useEffect, useState } from 'react'\r\nimport {\r\n  CButton,\r\n  CCard,\r\n  CCardBody,\r\n  CCardHeader,\r\n  CCardText,\r\n  CCardTitle,\r\n  CCol,\r\n  CForm,\r\n  CFormCheck,\r\n  CFormInput,\r\n  CFormLabel,\r\n  CFormSwitch,\r\n  CFormTextarea,\r\n  CModal,\r\n  CModalBody,\r\n  CModalFooter,\r\n  CModalHeader,\r\n  CModalTitle,\r\n  CRow,\r\n  CTable,\r\n  CTableBody,\r\n  CTableCaption,\r\n  CTableDataCell,\r\n  CTableHead,\r\n  CTableHeaderCell,\r\n  CTableRow,\r\n} from '@coreui/react'\r\nimport { getApiCall, postApiCall, putApiCall } from 'src/services/AppSetting'\r\nimport { base } from 'src/constants/Data.constant'\r\nimport Toast from 'src/components/toast/Toast'\r\nimport { ToastContainer, toast } from 'react-toastify'\r\nimport 'react-toastify/dist/ReactToastify.css'\r\n\r\nconst TicketView = (props) => {\r\n  const [ticket, setTicket] = useState([])\r\n  useEffect(() => {\r\n    ticketCardView()\r\n  }, [props])\r\n  const { id } = useParams()\r\n  console.log('iidd', id)\r\n  const ticketCardView = async () => {\r\n    let req = {\r\n      gameId: id,\r\n    }\r\n    // let result = await getApiCall(base.ticketCardView)\r\n    let result = await postApiCall(base.ticketCardView, req)\r\n    console.log('resultttweww', result)\r\n    try {\r\n      let convertJSON = JSON.parse(result.data[0].ticket_set)\r\n      console.log('convertJSONnn', convertJSON[0].dateSet)\r\n      setTicket(convertJSON)\r\n    } catch (error) {\r\n      console.log('errorjson', error)\r\n    }\r\n  }\r\n\r\n  const _render_ticket_card_view = (data) => {\r\n    {\r\n      return data?.map((item, index) => {\r\n        console.log('card_view_item', item)\r\n        return (\r\n          <CCol sm={6} style={{ margin: '10px 0' }} key={index}>\r\n            <CCard>\r\n              <CCardBody>\r\n                <div\r\n                  style={{\r\n                    flex: 1,\r\n                    display: 'flex',\r\n                    flexDirection: 'row',\r\n                    justifyContent: 'space-between',\r\n                  }}\r\n                >\r\n                  <div style={{ textAlign: 'center', fontWeight: 'bold' }}>\r\n                    Name: {item.userName != '' ? item.userName : 'Un Sold'}\r\n                  </div>\r\n                  <div style={{ textAlign: 'center', fontWeight: 'bold' }}>\r\n                    Phone Number: {item.userPhone != '' ? item.userPhone : 'N/A'}\r\n                  </div>\r\n                </div>\r\n                <div\r\n                  style={{\r\n                    flex: 1,\r\n                    display: 'flex',\r\n                    flexDirection: 'row',\r\n                    justifyContent: 'space-between',\r\n                  }}\r\n                >\r\n                  <div style={{ textAlign: 'center', fontWeight: 'bold' }}>\r\n                    Agent Name: {item.agentId != '' ? item.agentId : 'Un Sold'}\r\n                  </div>\r\n                  <div style={{ textAlign: 'center', fontWeight: 'bold' }}>\r\n                    Ticket Number: {item.ticketUniquieId != '' ? item.ticketUniquieId : 'N/A'}\r\n                  </div>\r\n                </div>\r\n                <div\r\n                  style={{\r\n                    display: 'flex',\r\n                    justifyContent: 'center',\r\n                  }}\r\n                >\r\n                  <div\r\n                    style={{\r\n                      display: 'flex',\r\n                      flexWrap: 'wrap',\r\n                      flexDirection: 'row',\r\n                      justifyContent: 'center',\r\n                      alignItems: 'center',\r\n                      margin: '10px',\r\n                    }}\r\n                  >\r\n                    {item?.dateSet?.map((innerItem, index) => (\r\n                      <div\r\n                        style={{\r\n                          width: '50px',\r\n                          height: '50px',\r\n                          display: 'flex',\r\n                          justifyContent: 'center',\r\n                          alignItems: 'center',\r\n                          border: '1px solid #ccc',\r\n                          fontWeight: 'bold',\r\n                          // color: innerItem.number == 0 ? '#fff' : '',\r\n                        }}\r\n                        key={index}\r\n                      >\r\n                        {innerItem.number}\r\n                      </div>\r\n                    ))}\r\n                  </div>\r\n                </div>\r\n              </CCardBody>\r\n            </CCard>\r\n          </CCol>\r\n          // <div>test1</div>\r\n        )\r\n      })\r\n    }\r\n  }\r\n\r\n  return (\r\n    <CRow>{_render_ticket_card_view(ticket || [])}</CRow>\r\n    // <div style={{ flex: 1, background: 'red' }}></div>\r\n  )\r\n}\r\n// const Styles = {\r\n//   ticket- container: {\r\n//     display: flex,\r\n//     flex-wrap: wrap,\r\n//       justify : content: center,\r\n//         margin : top: 20px,\r\n// }}\r\n\r\n//   .ticket {\r\n//     display: flex;\r\n//   flex - direction: column;\r\n//   align - items: center;\r\n//   margin: 10px;\r\n//   padding: 10px;\r\n//   border: 1px solid #ccc;\r\n// }\r\n\r\n//   .ticket - cell {\r\n//     width: 40px;\r\n//   height: 40px;\r\n//   display: flex;\r\n//   justify - content: center;\r\n//   align - items: center;\r\n//   border: 1px solid #ccc;\r\n//   margin: 2px;\r\n//   font - weight: bold;\r\n// }}\r\n// </style>\r\n\r\nexport default TicketView\r\n"],"names":["mainUrl","base","adminLogin","saveAgent","agentsList","editAgent","deleteAgent","saveUser","usersList","editUser","deleteUser","ticketCardView","gameList","saveGame","editGame","saveAnnouncement","announcementList","editAnnouncement","deleteAnnouncement","disclaimerList","editDisclaimer","agentDetails","agentPaidAmount","agentTransacationList","walletAction","startGame","postApiCall","async","url","request","token","localStorage","getItem","result","arguments","length","undefined","data","tokenData","header","headers","Authorization","axios","post","opsService","e","status","message","putApiCall","put","getApiCall","get","props","ticket","setTicket","useState","useEffect","id","useParams","console","log","req","gameId","convertJSON","JSON","parse","ticket_set","dateSet","error","_jsx","CRow","children","map","item","index","_item$dateSet","CCol","sm","style","margin","CCard","_jsxs","CCardBody","flex","display","flexDirection","justifyContent","textAlign","fontWeight","userName","userPhone","agentId","ticketUniquieId","flexWrap","alignItems","innerItem","width","height","border","number"],"sourceRoot":""}